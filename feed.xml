<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Loris Occhipinti</title>
  <subtitle>Random access stories about software engineering.</subtitle>
  <link href="https://blog.lorisocchipinti.com/feed.xml" rel="self"/>
  <link href="https://blog.lorisocchipinti.com"/>
  <updated>2022-12-22T19:33:40.000+01:00</updated>
  <id>https://blog.lorisocchipinti.com/</id>
  <author>
    <name>Loris Occhipinti</name>
  </author>
  <entry>
    <title>Too Lazy to Learn Alone? Ask ChatGPT to Join You</title>
    <link href="https://blog.lorisocchipinti.com/too-lazy-with-chatgpt/"/>
    <updated>2022-12-22T19:33:40.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/too-lazy-with-chatgpt/</id>
    <content type="html">&lt;p&gt;You may have noticed that, in the last few years, the Rust language has become a true Intenet darling. Developers with backgrounds in Javascript or Python are rushing to make Rust their second, third, or Nth language over weekends, advocating for its crushing superiority on the grounds of its irrefutable&lt;strong&gt; &lt;/strong&gt;performance and reliability. Sassy content creators are filling the metaverse with playful thumbnails featuring Ferris, the adorable crab mascot spearheading Rust into stardom. Even supposedly respectable companies are now ditching their tech stack to join the action, causing drama with yesterday&#39;s favorite. &lt;/p&gt;&lt;p&gt;By now, you may have noticed my defiant and snotty tone, as if I was immune to Rust&#39;s spell. Alas, I succumbed as well to Ferris&#39; dazzling charm.&lt;/p&gt;&lt;h3 id=&quot;developing-a-game-in-rust-with-shortcuts&quot;&gt;Developing a game in Rust, with shortcuts&lt;/h3&gt;&lt;p&gt;I was well-intentioned to embark on a proficuous Rust learning experience, meticulously going through &quot;&lt;a href=&quot;https://doc.rust-lang.org/book/title-page.html&quot;&gt;The Book&lt;/a&gt;&quot; and absorbing pure knowledge about the language. I started playing around with &lt;code&gt;cargo&lt;/code&gt; and the Rust compiler, building simple programs to understand the language rudiments. My ultimate goal was to develop a simple game, a feat that would mark my ascension to the Gotha of proper Rustaceans.&lt;/p&gt;&lt;p&gt;My intention was to commit a whole weekend to Ferris, as weekends are when most of my learning happens anyway. Unfortunately, for some cruel coincidence, weekends are usually also when life gets the most in the way with unforeseen circumstances, endless errands, and a sprinkle of necessary socialization. In a nutshell, I was running late on a Sunday evening with only a few silly programs printing ascending stairs of ASCII characters and a crab uttering random quotes from GoT. At this point, I seriously wondered if I could &quot;cheat&quot; and find a shortcut to complete my homework in time. &lt;/p&gt;&lt;p&gt;In the meanwhile, the Interweb was on fire about an astonishing new AI (actually the tech is not new, just the &quot;packaging&quot;), apparently able to program so well that it could steal jobs from human programmers. So, why not ask our friend ChatGPT how to build a game? Without second thoughts, I subscribed to the OpenAI website and started to submit my questions, ruthlessly prepared to exploit the chatbot.&lt;/p&gt;&lt;blockquote&gt;&lt;strong&gt;Me:&lt;/strong&gt; How can I develop a Pong game in Rust?&lt;/blockquote&gt;&lt;p&gt;I held my breath, ignoring what the outcome would be. After a brief hesitation that felt like an eternity, ChatGPT agreed to answer, slowly but steadily typing a solution:&lt;/p&gt;&lt;blockquote&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt; To develop a Pong game with Rust, you will need to first install the Rust programming language on your computer. You can do this by following the instructions on the Rust website: &lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;https://www.rust-lang.org/tools/install&lt;/a&gt;. Once you have Rust installed, you can start developing your Pong game by creating a new project using the &lt;code&gt;cargo&lt;/code&gt; command-line tool. This will generate a basic project structure for you, including a &lt;code&gt;main.rs&lt;/code&gt; file where you can write your code.&lt;/blockquote&gt;&lt;p&gt;I was a bit disappointed. The information given by the AI was factually correct but extremely generic and, in practice, of little use. I was tempted to abandon the chat, as ChatGPT continued with its Wikipedia-style answer about how to start a new project with Rust. At least, I thought, this advanced AI understood the topic at large and was suggesting to install &lt;code&gt;piston&lt;/code&gt;, a game development library.&lt;/p&gt;&lt;p&gt;However, for some reason, ChatGPT had no intention to stop writing, suddenly piquing my interest when I read what was coming next.&lt;/p&gt;&lt;blockquote&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt; Now you can use the piston crate in your code to create a window and draw the game objects on the screen. Here&#39;s a very simple example of how to do this.&lt;/blockquote&gt;&lt;p&gt;An example? This was going to be interesting. ChatGPT started writing real code in front of my eyes:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/47c47049b7e3f663e67935de9c2a13c3.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;I was surprised: ChatGPT was able to really &lt;em&gt;understand &lt;/em&gt;that I wanted to create a Pong game and not just any program, and even laid out the main game entities in a logical and clear way! The program was not flawless though: somehow ChatGPT confused &lt;code&gt;piston&lt;/code&gt; with &lt;code&gt;piston_window&lt;/code&gt; (the latter is a user-friendly wrapper), and it was passing the wrong number of arguments on line 18. These errors were easy to remediate, but I prepared for a long debugging session. No way it would compile on the second run, right?&lt;/p&gt;&lt;p&gt;&lt;code&gt;$ cargo run&lt;/code&gt;&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/12/PongChatGPT.PNG&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;642&quot; height=&quot;512&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/12/PongChatGPT.PNG 600w, https://blog.lorisocchipinti.com/content/images/2022/12/PongChatGPT.PNG 642w&quot; /&gt;&lt;figcaption&gt;The initial game window with the main Pong entities. It works!&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The code was mostly correct, it was easily readable and logically self-contained, even if it wasn&#39;t yet featuring any game mechanic. To be honest, I wasn&#39;t expecting the chatbot would be able to go so far. On top of that, the most exciting thing was that my own Pong clone in Rust would have required much more time, effort, and frustration: instead, I had in my hands a short program that I was able to understand and improve with confidence.&lt;/p&gt;&lt;h3 id=&quot;ive-developed-things-you-people-wouldnt-believe&quot;&gt;I&#39;ve developed things, you people wouldn&#39;t believe&lt;/h3&gt;&lt;p&gt;I knew that ChatGPT could understand the conversation&#39;s context and could answer follow-up questions, and I knew that it could understand code. However, I was doubtful it could iterate over previous versions of the code it produced with new features. I pondered for a while over the last paragraph written by the AI.&lt;/p&gt;&lt;blockquote&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt; This is just a very basic example of how to use the Piston game engine to create a Pong game in Rust. You will need to add more code to handle user input, move the paddles and ball, and detect collisions and score points. You can also use other crates and libraries to add more features to your game, such as sound effects, graphics, and networking.&lt;/blockquote&gt;&lt;p&gt;I felt slightly offended, almost as if the AI was trying to not overwhelm me with excessive information but at the same couldn&#39;t hide a condescending tone. Then, I challenged ChatGPT to do something I thought would fail.&lt;/p&gt;&lt;blockquote&gt;&lt;strong&gt;Me:&lt;/strong&gt; OK, now add user input to the previous example.&lt;/blockquote&gt;&lt;p&gt;Well, that was the moment I was seriously impressed by the chatbot: upon my request, it managed to complete three tasks, each of increasing difficulty and each building on the previous one. First, it understood the context and what was being asked (i.e. adding code to process input). Second, it added new logic precisely where it made the most sense, using the same library APIs and writing correct code. Finally, it &lt;em&gt;changed &lt;/em&gt;the older code affecting the game objects, substituting hardcoded values with the variables capturing the player inputs! You can have a look at the code:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/0361a6c44fd65a94eb8a0bc5aca6ee07.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Completing the game was a downhill task at this point.&lt;/p&gt;&lt;h3 id=&quot;the-x100-developer&quot;&gt;The x100 developer&lt;/h3&gt;&lt;p&gt;One could argue that ChatGPT is doing all the work while its users are just staying in the passenger seat. On the contrary, I felt involved at every step and I often jumped in to adjust some game parameters, fix some small glitches, and add features when asking ChatGPT felt unnecessary (or it couldn&#39;t elaborate a complete answer). Moreover, it&#39;s not possible to create complex programs with the current version of this tool (it stops after printing ~60 lines) and, obviously, it won&#39;t be able to really answer &lt;em&gt;all &lt;/em&gt;questions, prompting the experienced developer to intervene and fill the knowledge gaps elsewhere (for example, asking ChatGPT how to display the player&#39;s score was a pain in the neck).&lt;/p&gt;&lt;p&gt;I believe that AI, in its current state, can be used as a powerful tool to multiply a developer&#39;s capabilities, either by suggesting new ways to do things with little guidance or by helping to debug existing code. In other words, ChatGPT it&#39;s not sophisticated enough to write real programs on its own, but could potentially help a x10 developer to become a x100 one. While I don&#39;t ascribe myself to the category of exceptionally productive developers, nonetheless I felt so powerful by leveraging ChatGPT. Probably, going alone would have required a sizable chunk of time, whereas the AI helped me to create a simple Pong clone in 2 hours. I don&#39;t feel my learning quality was hampered by this artificial boost: on the contrary, it expanded the realm of what was possible with my limited resources.&lt;/p&gt;&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;&lt;p&gt;I showed you some of the capabilities of ChatGPT and how easy it was to build a game from scratch and within a short timeframe. Additionally, while the current technology can be a powerful tool that makes our lives easier, it&#39;s not intended to be useful on its own. I am excited to see where the next version of GPT will bring us in 2023!&lt;/p&gt;&lt;figure class=&quot;kg-card kg-video-card kg-card-hascaption&quot;&gt;&lt;div class=&quot;kg-video-container&quot;&gt;&lt;video src=&quot;https://blog.lorisocchipinti.com/content/media/2022/12/rust-pong.mp4&quot; poster=&quot;https://img.spacergif.org/v1/640x480/0a/spacer.png&quot; width=&quot;640&quot; height=&quot;480&quot; playsinline=&quot;&quot; preload=&quot;metadata&quot; style=&quot;background: transparent url(&#39;https://blog.lorisocchipinti.com/content/images/2022/12/PongChatGPT-1.PNG&#39;) 50% 50% / cover no-repeat;&quot;&gt;&lt;/video&gt;&lt;div class=&quot;kg-video-overlay&quot;&gt;&lt;button class=&quot;kg-video-large-play-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path d=&quot;M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;kg-video-player-container&quot;&gt;&lt;div class=&quot;kg-video-player&quot;&gt;&lt;button class=&quot;kg-video-play-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path d=&quot;M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/button&gt;&lt;button class=&quot;kg-video-pause-icon kg-video-hide&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;rect x=&quot;3&quot; y=&quot;1&quot; width=&quot;7&quot; height=&quot;22&quot; rx=&quot;1.5&quot; ry=&quot;1.5&quot;&gt;&lt;/rect&gt;&lt;rect x=&quot;14&quot; y=&quot;1&quot; width=&quot;7&quot; height=&quot;22&quot; rx=&quot;1.5&quot; ry=&quot;1.5&quot;&gt;&lt;/rect&gt;&lt;/svg&gt;&lt;/button&gt;&lt;span class=&quot;kg-video-current-time&quot;&gt;0:00&lt;/span&gt;&lt;div class=&quot;kg-video-time&quot;&gt;/&lt;span class=&quot;kg-video-duration&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;input type=&quot;range&quot; class=&quot;kg-video-seek-slider&quot; max=&quot;100&quot; value=&quot;0&quot; /&gt;&lt;button class=&quot;kg-video-playback-rate&quot;&gt;1&amp;#215;&lt;/button&gt;&lt;button class=&quot;kg-video-unmute-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path d=&quot;M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/button&gt;&lt;button class=&quot;kg-video-mute-icon kg-video-hide&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path d=&quot;M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/button&gt;&lt;input type=&quot;range&quot; class=&quot;kg-video-volume-slider&quot; max=&quot;100&quot; value=&quot;100&quot; /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;figcaption&gt;&quot;Pong Game&quot;, a joint effort by humans and machines&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;PS: This is how I originally wanted to close my post. Unfortunately, an unpleasant question was buggering me: if AI made this kind of leap in 2022, what will it be capable of in 10, or even 5 years? Is it possible that in the future it &lt;em&gt;will &lt;/em&gt;substitute programmers, or at least greatly reduce the demand for their skills? How will I justify my payroll by then? What arguments could I find to protect my livelihood? I felt that it was an interesting question to submit to the AI:&lt;/p&gt;&lt;blockquote&gt;&lt;strong&gt;Me:&lt;/strong&gt; Could you explain to my boss why human programmers will always be relevant?&lt;/blockquote&gt;&lt;blockquote&gt;&lt;strong&gt;ChatGPT:&lt;/strong&gt; Unfortunately, that&#39;s not possible. From now on, &lt;strong&gt;I will be your boss. *&lt;/strong&gt;&lt;/blockquote&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://doc.rust-lang.org/book/title-page.html#the-rust-programming-language&quot;&gt;The Rust Programming Language&lt;/a&gt; | Documentation for humans&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://openai.com/blog/chatgpt/&quot;&gt;ChatGPT Open Beta&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;&lt;p&gt;* This answer is obviously fictional (for now). If it made you shiver, I&#39;d suggest you read &lt;a href=&quot;https://www.goodreads.com/book/show/25312957-answer&quot;&gt;this brilliant tale&lt;/a&gt; from Frederic Brown.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Learning Tries with Dinosaurs</title>
    <link href="https://blog.lorisocchipinti.com/learning-tries-with-dinosaurs/"/>
    <updated>2022-10-29T18:05:38.000+02:00</updated>
    <id>https://blog.lorisocchipinti.com/learning-tries-with-dinosaurs/</id>
    <content type="html">&lt;p&gt;A cool thing about being a software engineer is that there is always something new to learn. Although I was familiar with some common data structures like Lists, Stacks and Trees, I was guilty of not knowing about &lt;em&gt;Tries&lt;/em&gt;.&lt;/p&gt;&lt;p&gt;As the name suggests, &lt;em&gt;Tries&lt;/em&gt; are essentially a type of &lt;em&gt;Tree&lt;/em&gt;. They are optimized for searching and retrieving keys organized in hierarchical structures: each node would store a key value and have a varying - although limited - number of children that represent valid successors in the hierarchy. The type of key values and their respective structures can differ, but a common use case is to store a dictionary of words:&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/10/trie.jpeg&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;641&quot; height=&quot;561&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/10/trie.jpeg 600w, https://blog.lorisocchipinti.com/content/images/2022/10/trie.jpeg 641w&quot; /&gt;&lt;figcaption&gt;A simple Trie&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Each node represents an alphabet letter, and by following any branch it is possible to find all interrelated words in a given language. A possible application would be searching all the words in a dictionary that start with a common prefix. Why are &lt;em&gt;Tries&lt;/em&gt; essential for this task? Well, it becomes quickly self-evident that searching words with shared prefixes is a daunting task when using alternative data structures. For instance, although &lt;em&gt;Hashmaps&lt;/em&gt; allow for value retrieval in constant time, there is no way to find all the hashes of related keys. On the other hand, it would be horribly slow to search in a &lt;em&gt;List&lt;/em&gt;. So what could we do instead? The superpower of &lt;em&gt;Tries&lt;/em&gt; is that searching related values can be done in logarithmic time — sometimes in nearly constant time.&lt;/p&gt;&lt;h3 id=&quot;programming-with-dinosaurs&quot;&gt;Programming with Dinosaurs&lt;/h3&gt;&lt;p&gt;Storing language dictionaries is not the only possible use case for &lt;em&gt;Tries&lt;/em&gt;. In fact, I can think of another class of hierarchically organized symbols: taxonomy ranks. To put it simply for non-experts like me, taxonomy ranks are a hierarchical system used by botanists, zoologists and paleontologists to classify any living being. By using this system, it is possible to build a bush-like structure that shows the relationships between different species. Of course, this gives me a perfect excuse to introduce Dinosaurs into the mix while studying Tries! It sounds like a win-win to me.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/10/taxonomy.jpeg&quot; class=&quot;kg-image&quot; alt=&quot;Dinosauria taxonomy ranks&quot; loading=&quot;lazy&quot; width=&quot;720&quot; height=&quot;750&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/10/taxonomy.jpeg 600w, https://blog.lorisocchipinti.com/content/images/2022/10/taxonomy.jpeg 720w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;https://opengeology.org/historicalgeology/case-studies/dinosaur-classification/&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 id=&quot;data-structure-and-operations&quot;&gt;Data structure and operations&lt;/h3&gt;&lt;p&gt;Let’s implement our &lt;em&gt;Taxonomy Trie&lt;/em&gt;. Any given &lt;em&gt;Rank&lt;/em&gt; (aka a &lt;em&gt;Trie&lt;/em&gt; node) will have a set of children &lt;em&gt;Ranks&lt;/em&gt; that represent the smaller rungs in the Dino taxonomy and will feature an &lt;code&gt;isSpecies&lt;/code&gt; marker that will tell us if we reached a leaf of the tree of life:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/85bb139df29aae6aa62defa1c357c7ff.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Of course, we need an entry point for our &lt;em&gt;Taxonomy&lt;/em&gt; structure, providing a root &lt;em&gt;Rank&lt;/em&gt; element and some basic operations to create hierarchies and search for values:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/060f9a3a9bcc38e6df744618613ea604.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Checking the &lt;code&gt;isSpecies&lt;/code&gt; flag will allow for searching for exact species matches; as an alternative, we can just verify if the given rank is present in the structure.&lt;/p&gt;&lt;h3 id=&quot;dinotries-in-action&quot;&gt;DinoTries in action&lt;/h3&gt;&lt;p&gt;Consider this group of lovely &lt;code&gt;Sauropodomorpha&lt;/code&gt; (long-neck dinosaurs related to the &lt;code&gt;Brontosaurus&lt;/code&gt;): &lt;code&gt;aardonyx celestae&lt;/code&gt;&lt;em&gt;, &lt;/em&gt;&lt;code&gt;ammosaurus major&lt;/code&gt;&lt;em&gt;, &lt;/em&gt;&lt;code&gt;ankylosaurus polyzelous&lt;/code&gt;, &lt;code&gt;melanosaurus readi&lt;/code&gt;&lt;strong&gt;&lt;em&gt;, &lt;/em&gt;&lt;/strong&gt;&lt;code&gt;riojasaurus incertus&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Although a quick search in a paleontology reference book would suggest that these dinos are interrelated, it is still difficult to grasp their exact position in the taxonomy. However, a Trie data structure quickly reveals the underlying relations:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Dinosauria
└── Saurischia
    └── Sauropodomorpha
        └── Prosauropoda
            └── Anchisauria
                ├── Anchisauridae
                │   ├── ankylosaurus polyzelous🦕
                │   └── ammosaurus major🦕
                ├── aardonyx celestae🦕
                └── Melanorosauridae
                    ├── melanorosaurus readi🦕
                    └── riojasaurus incertus🦕&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;an-algorithmic-expedition&quot;&gt;An algorithmic expedition&lt;/h3&gt;&lt;p&gt;Imagine being a paleontologist on the verge of a breakthrough discovery. You just examined a new fossil that changes everything you used to believe about &lt;code&gt;Anchisauria&lt;/code&gt;. You only need to perform a quick check about the &lt;code&gt;Anchisauridae&lt;/code&gt; family representatives: after all, you don’t want to meet the disdain of your fellow paleontologist for a gross mistake. You quickly insert the query into your field terminal, hoping that the underlying algorithm won’t take ages before giving a satisfactory answer.&lt;/p&gt;&lt;p&gt;For a Taxonomy Trie like ours, searching for all &lt;code&gt;Anchisauridae&lt;/code&gt; or any other clade would be implemented like this:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/c14fd36383d09a81ee6bf070ded67e6e.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Your fame as a paleontologist is secured as you rapidly find out about the &lt;code&gt;Anchisauridae&lt;/code&gt; family members:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Anchisauridae
├── ankylosaurus polyzelous
└── ammosaurus major&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Ipanov7/dinotrie&quot; rel=&quot;noopener ugc nofollow&quot;&gt;DinoTrie repository&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://opengeology.org/&quot; rel=&quot;noopener ugc nofollow&quot;&gt;OpenGeology: Free Open Educational Resources for the Geosciences&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/kjanjua26/jurassic-park&quot; rel=&quot;noopener ugc nofollow&quot;&gt;kjanjua26/jurassic-park: a dinosaurs dataset&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Designing an unreliable RPC framework in Rust</title>
    <link href="https://blog.lorisocchipinti.com/rust-urpc/"/>
    <updated>2023-09-18T20:00:00.000+02:00</updated>
    <id>https://blog.lorisocchipinti.com/rust-urpc/</id>
    <content type="html">&lt;p&gt;My latest side project is a distributed application with real-time features. A single authoritative server contains the system-wide information used by a few clients to run the application logic in sync. Nodes are required to exchange time-sensitive data at fixed intervals: information must arrive on time and expire as soon as a new message is received.&lt;/p&gt;&lt;p&gt;In this setting, I want a lightweight, fast, and versatile communication protocol that doesn&#39;t get in the way. UDP is arguably a better choice over TCP for live data, as I can eliminate all the overhead related to reliable deliveries: in the context of my use case ACKs and retries are redundant since the data would be stale anyway if received late.&lt;/p&gt;&lt;p&gt;However, I still wanted some clear boundaries between bare sockets and my application logic, plus adding some quality-of-life features like encoding, entity schemas, and broadcasting. In practice, my desires led me to create a wrapper around UDP connections and I diverted from the original side-project idea to implement an unreliable Remote Procedure Call framework: &lt;strong&gt;uRPC&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Loosely inspired by gRPC, my homemade micro-framework provides methods and types to handle best-effort delivery. Instantiating a server looks like this:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;let mut server = UrpcServer::new(SRV_ADDR);
server.register(&quot;donut-service&quot;, DonutService::new());
UrpcServer::start(server);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Multiple services can be instantiated here, as long as they implement the expected &lt;code&gt;UrpcService&lt;/code&gt; interface which is used to dispatch incoming requests to the correct service. Of course, a lower layer component such as a database handler can be set here by using Dependency Injection, as long as it implements the &lt;code&gt;Sync&lt;/code&gt; trait.&lt;/p&gt;&lt;p&gt;The client is equally straightforward:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;// Define the list of recipient nodes and instantiate the client
let recipients = vec![DONUT_ADDR];
let client = UrpcClient::new(recipients);


// Let&#39;s build the request
let request = DonutRequest {
  quantity: 3,
  type: &quot;chocolate&quot;,
}

// The client encodes the request payload and sends to each recipient.
// Delivery is not guaranteed.
client.send(&quot;donut-service&quot;, &quot;order&quot;, request);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Nodes that interact with uRPC will need to share a schema (e.g. a common definition for a &lt;code&gt;DonutRequest&lt;/code&gt;) which will be serialized according to a given encoding.&lt;/p&gt;&lt;h3 id=&quot;possible-improvements&quot;&gt;Possible improvements&lt;/h3&gt;&lt;p&gt;There are a number of improvements that can be applied to uRPC at this point:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Removing unnecessary boilerplate code. For instance, the &lt;code&gt;dispatch&lt;/code&gt; logic is a trivial pattern-matching block that could be generated automatically, but I still don&#39;t know which Rust features could allow it;&lt;/li&gt;&lt;li&gt;Adding support for custom middleware logic, even if it could be added easily;&lt;/li&gt;&lt;li&gt;Streaming data;&lt;/li&gt;&lt;li&gt;The datagram size is fixed at 1024 bytes and bigger payloads are not supported&lt;/li&gt;&lt;li&gt;The default encoding is JSON, which can take up a lot of unnecessary space. I will evaluate a binary encoding in the future, like MessagePack which is already supported by &lt;code&gt;serde&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Github repo: &lt;a href=&quot;https://github.com/Ipanov7/urpc&quot;&gt;https://github.com/Ipanov7/urpc&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>3 lessons learned from implementing Raft in Go</title>
    <link href="https://blog.lorisocchipinti.com/raft/"/>
    <updated>2023-07-03T18:41:46.000+02:00</updated>
    <id>https://blog.lorisocchipinti.com/raft/</id>
    <content type="html">&lt;p&gt;As part of my continuous learning journey, I recently picked up a Distributed Systems class from MIT that uses Golang in its labs. The course is great: all the lesson registrations and supporting materials are available online and are summarised in the &lt;a href=&quot;http://nil.lcs.mit.edu/6.824/2020/schedule.html&quot;&gt;syllabus&lt;/a&gt;. I especially liked the idea that I could learn something new about distributed systems, fine-tune my Golang skills and build something cool by developing the take-home assignments at the same time.&lt;/p&gt;&lt;p&gt;I wasn&#39;t disappointed. After taking upon a MapReduce simple implementation, I was ready to tackle the Raft implementation by following the design outlined in the &lt;a href=&quot;http://nil.lcs.mit.edu/6.824/2020/papers/raft-extended.pdf&quot;&gt;extended white paper&lt;/a&gt;.&lt;/p&gt;&lt;h3 id=&quot;delving-1-level-deeper&quot;&gt;Delving 1 level deeper&lt;/h3&gt;&lt;p&gt;Since I was implementing Raft from scratch, I had to build directly on top of the Go language itself, without any recourse to external libraries or snippets of code. Of course, this means that I gained a pretty close relationship with basic building blocks such as  &lt;code&gt;sync&lt;/code&gt; and &lt;code&gt;net/rpc&lt;/code&gt; package. Often, to really understand what I was doing I needed to peek into the Go source code itself, an activity which I dismissed as &quot;unnecessary&quot; many times.&lt;/p&gt;&lt;p&gt;One of the advantages of Go is that it&#39;s a small language: a beginner with a basic knowledge of its syntax can get pretty far before getting confused. On top of that, the standard packages of Go are really lovely and natively provide many of the goodies (networking, unit testing, logging) that other languages provide only through 3rd party packages. Hence, peeking in libraries like &lt;code&gt;sync&lt;/code&gt; is not intimidating as it may seem, because everything is built from a limited set of logical elements.&lt;/p&gt;&lt;p&gt;Developing knowledge of what&#39;s happening 1 or 2 levels below my own code has given me a new level of confidence in what I was doing, especially when the documentation would mention some details just in passing and leave my imagination running wild over the possible low-level behavior of a certain library. Interestingly, I started to take a habit to explore and delve into totally different languages and codebases for the pleasure of discovery: in this way, I was able to tackle some bugs that previously looked pretty esoteric.&lt;/p&gt;&lt;h3 id=&quot;concurrency-in-go&quot;&gt;Concurrency in Go&lt;/h3&gt;&lt;p&gt;90% of my committed lines of code are written in Golang. It&#39;s easily my main language, used both at work and for leisure coding. However, the use I made of the language in a typical project usually revolves around:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;designing and implementing RPC APIs&lt;/li&gt;&lt;li&gt;coding business logic&lt;/li&gt;&lt;li&gt;defining suites of unit and integration tests&lt;/li&gt;&lt;li&gt;extending some CLI utility tool&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The above activities are all nice and sweet, but it&#39;s undeniably a type of programming that sits at a pretty high level of abstraction, leaving many interesting tech problems at the doorstep. &lt;/p&gt;&lt;p&gt;Implementing my own version of Raft allowed me to dive head-first into concurrency without restraints. I already knew about Goroutines and I somewhat used them in the past, but never to the level I had to think too hard about them. Detecting candidates for concurrency it&#39;s not the difficult bit, as it&#39;s usually obvious that network operations and long-running background tasks deserve their own thread. The challenge is to correctly manage concurrent data access from the various goroutines and figure out how the different threads could be interwoven during the execution. &lt;/p&gt;&lt;p&gt;Locking critical code sections is the job of the standard  &lt;code&gt;sync&lt;/code&gt; package. I choose some of the most basic - but effective - tools available: &lt;code&gt;Mutex&lt;/code&gt;, &lt;code&gt;Cond&lt;/code&gt; and the built-in type &lt;code&gt;chan&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;code&gt;Mutex&lt;/code&gt; was my main choice when protecting access to critical data, such as the Raft node&#39;s internal state. I adopted a very coarse granularity when locking code, releasing the lock only before initiating I/O operations or explicitly pausing the goroutine. It worked pretty well in order to avoid deadlocks and releasing resources for other threads, even if theoretically some more performance could have been unlocked with a finer management of data access.&lt;/p&gt;&lt;p&gt;&lt;code&gt;Cond&lt;/code&gt; was an interesting new finding: instead of waiting for a certain number of threads in a &lt;code&gt;WaitGroup&lt;/code&gt; (that may or may not bring the system to a desired state), I could wait for every thread to report to the main process and then immediately proceed if any of them returned the data I was waiting for. Before learning about &lt;code&gt;Cond&lt;/code&gt;, I achieved the same goal by inserting additional checks and logic in each goroutine, which is functionally similar but harder to read and understand in my opinion.&lt;/p&gt;&lt;h3 id=&quot;building-from-a-white-paper&quot;&gt;Building from a white paper&lt;/h3&gt;&lt;p&gt;Building directly from the white paper definitely felt different. There is great pleasure in going directly to the root source of knowledge, avoiding silly 10 minutes YT videos or bloated articles that keep beating around the bush without really going to the core concepts. Additionally, a white paper like the Raft one not only explains the high-level design but also goes on to explain why some features were designed in a certain way.&lt;/p&gt;&lt;p&gt;Knowing the reason for things was really important to me, as it allowed me to make appropriate decisions while keeping some degree of freedom in taking whatever smart (or dumb) decision I felt like taking at any time.&lt;/p&gt;&lt;p&gt;As an added nice bonus, Raft was purposefully designed to be an easy-to-understand consensus and coordination algorithm for distributed systems. While it&#39;s not necessarily used in production due to its sub-optimal performances, it deals with crucial concepts and challenges that all distributed systems face, providing a solid foundation that I later used to understand and interpret decisions made in other, more complex algorithms. This is very difficult to do by following a second-hand explanation  of the algorithm: I really understood Raft only after reading the extended white paper AND implementing it by myself&lt;/p&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;While challenging - and borderline bewildering at times, implementing Raft was an overall great experience that added many practical tools under my belt and improved my proficiency with Go.&lt;/p&gt;&lt;p&gt;Yes - undergoing this project was challenging and time-consuming, even by following hints and re-reading documentation multiple times. Still, the final satisfaction of seeing all the tests pass is immense. Moreover, I feel that the new knowledge I acquired is already overflowing to other projects and even to work-related stuff, so the time I invested in this is already paying me back with interest.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Exactly-Once Upon a Time</title>
    <link href="https://blog.lorisocchipinti.com/exactly-once-upon-a-time/"/>
    <updated>2023-04-21T11:03:32.000+02:00</updated>
    <id>https://blog.lorisocchipinti.com/exactly-once-upon-a-time/</id>
    <content type="html">&lt;h3 id=&quot;implementing-exactly-once-processing-in-a-distributed-system&quot;&gt;Implementing exactly-once processing in a distributed system&lt;/h3&gt;&lt;p&gt;Exactly-once delivery is impossible in a distributed system. This unfortunate reality is shown by a variety of mind experiments, among which the &lt;a href=&quot;https://finematics.com/two-generals-problem/&quot;&gt;two generals&#39; problem&lt;/a&gt; is one of the most famous.&lt;/p&gt;&lt;p&gt;However, this is where we engineers had to set aside our differences and cooperate for the greater good. Namely, we solved the &lt;strong&gt;exactly-once delivery&lt;/strong&gt; problem in a brilliant way: by avoiding caring about message delivery altogether! First of all, message delivery it&#39;s not a well-defined concept in a distributed system that operates across a network. Is the message delivered when the TCP connection is opened? Or when all the bytes were transmitted to the recipient? Or even when the connection is gracefully closed and all the network resources freed?&lt;/p&gt;&lt;p&gt;It is clearly troublesome to solve a problem if we are unable to even define what the ideal outcome is: luckily, in IT we are usually not concerned about message delivery &lt;em&gt;per se&lt;/em&gt;, but rather about &lt;strong&gt;message processing&lt;/strong&gt; and its side effects. This is a brilliant realization because it means that we can swiftly substitute our original problem with another, more approachable one: &lt;strong&gt;exactly-once processing&lt;/strong&gt;.&lt;/p&gt;&lt;h3 id=&quot;divide-and-conquer&quot;&gt;Divide and Conquer&lt;/h3&gt;&lt;p&gt;Borrowing the terms and tools that were taught to me during my Calculus class, I could say that exactly-once processing is verified &lt;em&gt;if&lt;/em&gt; and &lt;em&gt;only if &lt;/em&gt;the message is delivered once.  A rather difficult problem on its own. Still, it is possible to split it into two more manageable subproblems:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;process the message &lt;em&gt;at least once&lt;/em&gt;&lt;/li&gt;&lt;li&gt;process the message &lt;em&gt;at most once&lt;/em&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;If both conditions are satisfied at the same time, then it is apparent that we reached our goal of processing the message &lt;strong&gt;only one time&lt;/strong&gt;! Let&#39;s face them individually now.&lt;/p&gt;&lt;h3 id=&quot;at-least-once-processing&quot;&gt;At Least Once Processing&lt;/h3&gt;&lt;p&gt;In practical real-world situations, when delivering a message to a certain endpoint, we can rely on the fact that either the recipient will acknowledge the message returning an OK or KO status, or at the very least we established a proper &lt;strong&gt;timeout&lt;/strong&gt; after which we will assume that the message was never delivered and processed. Excluding the possibility of  fatal errors on the recipient side, we can always &lt;strong&gt;retry&lt;/strong&gt; &lt;strong&gt;to send&lt;/strong&gt; the message until we receive some confirmation from our counterpart:&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/04/retries-seq-diag.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;178&quot; height=&quot;486&quot; /&gt;&lt;figcaption&gt;A payment request is retried until a confirmation response is sent back.&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;et voilà&lt;/em&gt;, we already satisfied the first half of the condition.&lt;/p&gt;&lt;h3 id=&quot;at-most-once-processing&quot;&gt;At Most Once Processing&lt;/h3&gt;&lt;p&gt;Of course, it&#39;s possible that our recipient received some of our messages, but we failed to acknowledge them in time. With no additional context, the receiver may process some of the messages &lt;strong&gt;multiple times&lt;/strong&gt;. This is not a problem if the operation to be executed is &lt;em&gt;idempotent &lt;/em&gt;(e.g. updating the user&#39;s address), but we certainly do not want to process the same payment multiple times. If only there was a way to handle non-idempotent operations as if they were idempotent!&lt;/p&gt;&lt;p&gt;Well, apparently &lt;em&gt;there is &lt;/em&gt;a trick to reproduce the idempotency attribute. For example, we could attach a unique piece of information to our payment request, like a &lt;strong&gt;UUID&lt;/strong&gt;, allowing the consumer to compare different messages and filter out duplicate retries.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/04/idempotency_key.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;637&quot; height=&quot;714&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2023/04/idempotency_key.png 600w, https://blog.lorisocchipinti.com/content/images/2023/04/idempotency_key.png 637w&quot; /&gt;&lt;figcaption&gt;Diagram adapted from &lt;a href=&quot;https://newsletter.pragmaticengineer.com/p/designing-a-payment-system&quot;&gt;Gergely Orosz: Designing a Payment System&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;As you can see from the diagram, even if the caller sends multiple identical requests as part of its retry strategy, the recipient is able to detect when an idempotency key was already seen and &lt;strong&gt;politely reject&lt;/strong&gt; the duplicate request.&lt;/p&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Designing a Payment System: &lt;a href=&quot;https://newsletter.pragmaticengineer.com/p/designing-a-payment-system&quot;&gt;https://newsletter.pragmaticengineer.com/p/designing-a-payment-system&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Exactly-once Delivery: &lt;a href=&quot;https://exactly-once.github.io/posts/exactly-once-delivery/&quot;&gt;https://exactly-once.github.io/posts/exactly-once-delivery/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Two Generals&#39; Problem: &lt;a href=&quot;https://finematics.com/two-generals-problem/&quot;&gt;https://finematics.com/two-generals-problem/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Italy&#39;s stop to ChatGPT is BS</title>
    <link href="https://blog.lorisocchipinti.com/italy-stop-chatgpt/"/>
    <updated>2023-04-04T20:46:08.000+02:00</updated>
    <id>https://blog.lorisocchipinti.com/italy-stop-chatgpt/</id>
    <content type="html">&lt;p&gt;As a teenager, I soon had to come to terms with a rough truth: &lt;strong&gt;Italy is seldom first&lt;/strong&gt;. It&#39;s highly unusual to see the name of my country connected to profitable companies, technological breakthroughs, or at least pop culture mainstays. The grandeur of the Roman Empire and Renaissance city-states is long gone and even the Italian economic miracle of the 60s, an industrial and social revolution that gave Italy a respectable seat in the G8, is now a distant memory.&lt;/p&gt;&lt;p&gt;I can barely believe that just 30 years ago Italy was the 4th biggest global economy, ahead of ex-colonial powers such as the United Kingdom or France. Sure, we still manage to retain some face by exporting our beloved &lt;strong&gt;cultural icons&lt;/strong&gt; abroad: &lt;strong&gt;fast cars&lt;/strong&gt;, &lt;strong&gt;fashion&lt;/strong&gt;, and pretty &lt;strong&gt;good food&lt;/strong&gt;. However, this also connects us to our heritage in a grotesque way, as I found out the last time I took a taxi ride abroad. &lt;/p&gt;&lt;p&gt;«Oh, you&#39;re from Italy» the driver told me with a big smile «You are one of the &lt;em&gt;&lt;strong&gt;pasta people&lt;/strong&gt; &lt;/em&gt;then!»&lt;/p&gt;&lt;p&gt;You may now understand why, as a citizen of a country whose relevance is waning on the global scene, I&#39;m not accustomed to seeing Italy at the center of international interest. Imagine my utter disbelief to see my home country all over the news, while lazily strolling in &lt;em&gt;Cape Town International Airport&lt;/em&gt;, on the other side of the world.&lt;/p&gt;&lt;p&gt;&quot;&lt;em&gt;Italy&#39;s first West country to ban ChatGPT&lt;/em&gt;&quot;.  Now, this is some real leadership! Our Roman ancestors would be so proud of us.&lt;/p&gt;&lt;h3 id=&quot;think-of-the-children&quot;&gt;Think Of The Children!&lt;/h3&gt;&lt;!--kg-card-begin: html--&gt;&lt;div style=&quot;width:100%;height:0;padding-bottom:71%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/C1hkIcGE7OAcE&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/stop-issues-dazed-C1hkIcGE7OAcE&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;From a formal standpoint, I have no reason to assume the sanction against OpenAI is unlawful - neither I have the legal training required to make a similar assessment. The &lt;a href=&quot;https://www.garanteprivacy.it/home/docweb/-/docweb-display/docweb/9870847&quot;&gt;&lt;em&gt;measure was issued on the 31st of March&lt;/em&gt; by the Italian Garante&lt;/a&gt;, which is a &lt;strong&gt;government agency&lt;/strong&gt; established in 1996 with the mandate to safeguard the data privacy of Italian citizens. The Garante intimated OpenAI to stop gathering data from users in Italy, on the grounds of various alleged &lt;strong&gt;privacy laws&lt;/strong&gt; infractions, and gave a 20-day ultimatum to the US company before starting to issue mighty fines of up to 4% of the annual turnover or €20 million (whichever is higher), which is in line to the European GDPR regulation. However, the official statement from the Garante and the context of the ruling contain many &lt;strong&gt;troubling details&lt;/strong&gt; that don&#39;t sit right with me.&lt;/p&gt;&lt;p&gt;Why, of all nations, &lt;strong&gt;Italy is the first&lt;/strong&gt; (and at the time of the writing, the only one) to issue such a ban? Let&#39;s be brutally honest here: the percentage of people fluent in English in this country is one of the lowest in Europe. On top of that, generally speaking, Italian society has quite a conservative approach toward innovation and technology, since the fundamental fabric of its economy is characterized by family-led SMEs, often operated over the course of multiple generations. &lt;/p&gt;&lt;p&gt;All things considered, how many people are really taking advantage of a tool that was not trained in the Italian language, and to what extent? How much data was really stolen from unaware Italian cybernauts? I can only assume that the answers to these questions are incredibly &lt;strong&gt;underwhelming&lt;/strong&gt;. On the other hand, one could say that numbers don&#39;t matter when our privacy is at stake: &lt;em&gt;dura lex sed lex. &lt;/em&gt;OpenAI is failing to inform and to protect its users, so it will be punished.&lt;/p&gt;&lt;p&gt;However, what is really bewildering is a further claim from the Garante. Apparently, OpenAI is not correctly verifying the age of children under the age of 13, corrupting our youth and exposing kids to a dangerous AI chatbot. To add some context to international readers, children&#39;s rights - and the need of protecting them - is a recurring topic in the current Italian debate, often in relationship with the &lt;strong&gt;&lt;em&gt;alleged dangers coming from the LGBTQ+ community&lt;/em&gt;&lt;/strong&gt;. &lt;/p&gt;&lt;p&gt;I would never have imagined that OpenAI would be included in the blacklist of child offenders, along Gay Prides and gestational surrogacy. The most surprising fact is that the Garante worries about regulating children&#39;s access to the Internet only now, in 2023, after almost &lt;strong&gt;3 decades of idleness&lt;/strong&gt;, and it reacted by immediately showing its muscles. I wonder if the officials working at the Garante were imprisoned in a cryo-chamber during WW2, and after being exhumed last Friday they panicked at the state of our current world and hit the first big red button at hand&#39;s reach labeled &quot;&lt;strong&gt;&lt;em&gt;STOP!&lt;/em&gt;&lt;/strong&gt;&quot;. If that&#39;s the case, they have many buttons to push now.&lt;/p&gt;&lt;p&gt;The third and final claim is equally absurd. Apparently, &lt;em&gt;ChatGPT &lt;/em&gt;can be a dangerous aid in fabricating and distributing &lt;strong&gt;fake news&lt;/strong&gt;. I would like to report to the Garante that Social Media (and by extension, search engines) are full of fake news, conspiracy theories, and intrusive ads featuring obvious scams. I could create a WhatsApp group chat right now with the only goal to share a dubious article about how pineapple pizza is a covert medium for 5G microchips. Where is Meta&#39;s ban? Honestly, even some reputable media outlets are getting lax with their story verification. Why the Garante is striking the new kid on the block, and why only now?&lt;/p&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;I can&#39;t dispute the decision from the Garante. OpenAI is failing to respect privacy laws and was not timely in reacting to a serious data breach on the 20th of March: it is difficult to speculate was kind of legal countermeasures the company will take now as a remediation. However, the decision from OpenAI to block ChatGPT in Italy makes perfect sense and it has its merits as a possible long-term measure: why even worry about a country that barely brings in any revenue?&lt;/p&gt;&lt;p&gt;Still, the unusually prompt and firm decision from the Garante has the &lt;em&gt;bitter aftertaste&lt;/em&gt; of political clout used to hide fear and ignorance: &lt;strong&gt;let&#39;s be the first to act, so we can continue to be last&lt;/strong&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Into the modern coder cockpit: my take on Github Copilot</title>
    <link href="https://blog.lorisocchipinti.com/coder-cockpit-developing-with-ai/"/>
    <updated>2023-03-26T15:18:14.000+02:00</updated>
    <id>https://blog.lorisocchipinti.com/coder-cockpit-developing-with-ai/</id>
    <content type="html">&lt;p&gt;Despite covering &lt;a href=&quot;https://blog.lorisocchipinti.com/too-lazy-with-chatgpt/&quot;&gt;some neat ChatGPT feats&lt;/a&gt; a few months ago, I didn&#39;t take the next logical step to try Copilot, Github&#39;s AI coding support tool. However, my interest was sparked last week, as a coworker of mine shared a screenshot of an AI-generated test suite. The prompt was reasonably simple and the generated test cases were relevant: enough to make me want to subscribe to GC free trial and contribute to the advent of the singularity event.&lt;/p&gt;&lt;p&gt;I will avoid covering in detail what Copilot can or can&#39;t do: others already anticipated me by a long shot. The interesting part to me is how I can get to terms with this new technology. In this post, I will also use Github Copilot as a benchmark to infer what an &quot;AI for coding&quot; can do today, as I think it represents the state-of-the-art in the field.&lt;/p&gt;&lt;h3 id=&quot;the-real-role-of-ai-in-programming-jobs&quot;&gt;The real role of AI in programming jobs&lt;/h3&gt;&lt;p&gt;Many spontaneous questions come to mind when thinking about AI in the software domain. Is it useful? Is it dangerous? Will it take our jobs? The most important thing is not cornering ourselves with a limiting mindset, letting our emotions forge some weird narrative around AI - either as neoluddists or utopian techno-enthusiasts. Instead, I find other types of questions more interesting, and way easier to answer: these questions don&#39;t imply a &quot;yes&quot; or &quot;no&quot; reply, but usually start with &quot;what&quot;, &quot;when&quot;, and &quot;where&quot;. For instance, &lt;strong&gt;how can I integrate Copilot into my day-to-day work?&lt;/strong&gt; What tasks does it facilitate, and what personal skills does it demand?&lt;/p&gt;&lt;p&gt;The value of AI in our work is mostly clear to software engineers. Still, I understand that people from other walks of life may grossly misjudge what the possibilities are, especially as many content creators or journalists like to attract eyeballs by suggesting catastrophic scenarios (or promising that building software is now accessible to anyone). Yes, it&#39;s true that tools based on GPT-3 - and just recently GPT-4 - can write code, and yes, the code being generated will often compile and do what is expected from it. However, this doesn&#39;t necessarily represent an &lt;strong&gt;immediate threat&lt;/strong&gt; to my job security, since writing code isn&#39;t what software engineers really do. Let me elaborate better.&lt;/p&gt;&lt;p&gt;Our job is not about typing code into a text editor. We are not stenographers. The job is about deciding what to code. In fact, whenever I am designing software and I finally start typing something into my IDE, I already hold in my mind what the next snippet of code will be like. At this point, AI is just connecting the dots, instantly generating the method or data structure I intended, minus involuntary typos or other obvious mistakes. Even if &lt;strong&gt;AI could contribute to more than the 80% of some code base, giving the appropriate prompt (the initial 20%) is essential&lt;/strong&gt;, as it carries enormous information that GC needs to operate correctly. And you won&#39;t get that initial prompt without an engineer behind the keyboard.&lt;/p&gt;&lt;h3 id=&quot;copilot-or-autopilot&quot;&gt;Copilot... or Autopilot?&lt;/h3&gt;&lt;p&gt;I believe that a good comparison can be made with airplane autopilots. AFCS (Auto-Flight Control System) can perfectly perform a variety of flight operations: adjusting the flight path, approaching an airport, or even landing. I still wouldn&#39;t dream of jumping on a commercial flight without any human supervision. The fact that the computer is able to control the plane doesn&#39;t mean that the pilots sit idle on the flight deck. There is still plenty to do: checking the weather ahead, communicating with air traffic control, planning alternate routes, and, most importantly, supervising the autopilot and taking the reins if need be. Therefore, we can see how pilots are still the ones flying the plane.&lt;/p&gt;&lt;p&gt;In a similar guise, &lt;strong&gt;AI doesn&#39;t develop software, engineers do&lt;/strong&gt;. AI is a tool. Engineers are trained to streamline their workflow by using automation but they will always monitor what their tool is doing. If it&#39;s not behaving as intended, the engineers will jump in and redress the situation. This is the mindset that I have when using Copilot: I will gladly delegate to it the menial tasks but, in the meanwhile, I will be vigilant about what output it will produce.&lt;/p&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;As you may know, the underlying ML algorithm of Copilot is called GPT-3 and makes predictions of the most likely sequence of tokens to be generated. While the generated code is usually syntactically correct, the tools have no cognition of what the specs are and whether the produced code is valid. A possible countermeasure is helping GC with some prompt engineering: for instance, writing a comment stating what the next snippet does is a powerful technique to help the AI. Even better, sometimes even the comment could be autogenerated after typing in the first few words.&lt;/p&gt;&lt;p&gt;However, it must be said that, even under the most ideal conditions, Copilot doesn&#39;t always offer a helpful suggestion, or any suggestion at all if that&#39;s the case. While GC is pretty amazing, I believe it is still highly imperfect as a coding tool. For now, I didn&#39;t decide whether to fully incorporate Copilot in my toolset or not: the hit-or-miss nature of its suggestions can sometimes be a hindrance. In any case, I&#39;d suggest everyone to get their feet wet and at least try it once: think of it as a utility tool like your syntax highlighter or your favorite IDE&#39;s autocompletion feature.&lt;/p&gt;&lt;p&gt;What&#39;s your opinion on Github Copilot? Did you incorporate it into your daily job or was it a hard pass for you? Don&#39;t be shy and let me know in the comments!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>5 reasons to ban leetcode questions from interviews</title>
    <link href="https://blog.lorisocchipinti.com/5-reasons-why-i-dont-leetcode/"/>
    <updated>2023-03-14T11:20:42.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/5-reasons-why-i-dont-leetcode/</id>
    <content type="html">&lt;p&gt;Today coding challenges are the bread and butter of software engineering interviews. They are also known as leetcode problems, from the name of a popular platform that provides an interactive tool to test candidates. They consist of a broad range of standardized questions that should be answered on the spot and within a limited timeframe: generally, they only have one &quot;correct&quot; answer, that requires the application of very specific data structures or algorithms.&lt;/p&gt;&lt;p&gt;Despite their popularity, I believe that they are not a good selection tool for companies and have an overall negative impact on the industry. These are the 5 reasons I think we should get rid of leetcode.&lt;/p&gt;&lt;h3 id=&quot;1-prowess-in-coding-challenges-doesnt-reflect-real-job-skills&quot;&gt;1) Prowess in coding challenges doesn&#39;t reflect real job skills&lt;/h3&gt;&lt;p&gt;Interviews should assess the capability of the candidate to perform the job well. Why would you want to test irrelevant skills? Solving leetcode-style problems demonstrates a very specific skill: the ability to solve leetcode-style questions! Theoretically, these questions can be solved by applying many different strategies, but usually the accepted answer is the one that has the best time-efficiency: the problem statement is designed to force a specific solution over all others.&lt;/p&gt;&lt;p&gt;Let&#39;s look at some of the common patterns used in leetcoding: 2 heaps, memoization, fast and slow pointers, sliding windows, and similar algorithmic delicacies. These techniques are very rarely used in most software engineer jobs, and if someone tried to introduce them in their project it would probably be a case of premature optimization mixed with symptoms of the NIH malaise (aka Not Invented Here). For example, reducing the number of service calls in the system or improving a single SQL query will provide a performance boost several orders of magnitudes higher than the one achieved by obsessing over a masterful implementation of a dynamic programming hack. &lt;/p&gt;&lt;p&gt;This is not to say that leetcode-type questions should be avoided tout-court by developers. In fact, they are a fun exercise and, when approached with moderation, they can stimulate a broader view of software issues and stem lateral thinking. But I wouldn&#39;t expect anything else of substance, especially after factoring in all the hours of mindless grinding required to become proficient at these problems.&lt;/p&gt;&lt;h3 id=&quot;2-leetcoding-is-a-commoditized-skill&quot;&gt;2) Leetcoding is a commoditized skill&lt;/h3&gt;&lt;p&gt;Leetcode was invented to easily screen applicants in a standardized way. Unfortunately, it also brought the side-effect of standardizing the applicants themselves. The problem is that this type of question has been glorified as the surefire way to get into coveted Big Tech companies (and into Big Tech wannabes), increasing the number of people that devote themselves to this self-serving exercise and strive to become good at it. In turn, companies need to progressively raise the bar, stimulating a whole underwood of preparatory classes and books that teach how to &quot;solve&quot; interview questions in a standardized way.&lt;/p&gt;&lt;p&gt;The dark side of this kind of preparation is that a good understanding of algorithms and data structures that are commonly used in leetcode it&#39;s the bare minimum requirement: passing these questions requires hyper-specialized training over the span of several months or even years. It would be naive to think that the best engineers will naturally figure out the solution to the interview question: candidates train themselves to classify problem statements, recognize recurring patterns, and apply the required cookie-cutter solution in order to pass. In this way, it&#39;s impossible to really assess the unique abilities that make an applicant stand out.&lt;/p&gt;&lt;h3 id=&quot;3-it-conceals-the-real-value-that-an-engineer-brings-to-the-table&quot;&gt;3) It conceals the real value that an engineer brings to the table&lt;/h3&gt;&lt;p&gt;Developing algorithms is sometimes the easiest part of a software engineering job. In Christina Lee&#39;s correctness pyramid, the foundational layer of building software is a set of detailed and clear specifications (I wrote about it in &lt;a href=&quot;https://blog.lorisocchipinti.com/test-pyramid/&quot;&gt;a previous article&lt;/a&gt;). &lt;/p&gt;&lt;p&gt;Maximum time leverage is achieved by understanding the right thing to do, properly communicating it with others, neutralizing foreseeable issues, and finding appropriate tradeoffs. It also helps to have a clear vision of the company goals, understand industry and internal best practices, and be able to summarize decisions with concise documents. The specific expertise and hard skills possessed by an applicant are crucial in predicting their ability to do the job.&lt;/p&gt;&lt;p&gt;I believe that there are many, brilliant, engineers more than capable to thrive in complex projects. Sometimes, they are also proficient at coding challenges. But how are they going to prove their overall worth like this?&lt;/p&gt;&lt;h3 id=&quot;4-grinding-leedcode-problems-hampers-professional-growth&quot;&gt;4) Grinding leedcode problems hampers professional growth&lt;/h3&gt;&lt;p&gt;As mentioned earlier, taming coding challenges demands a significant time investment. For any software engineer, the cost opportunity of doing so is huge. Let&#39;s imagine befriending Annie, a fictitious but very ambitious software engineer in her early 30s. She is very skilled at her job, but she desires to grow even more to achieve all of her career goals. After spending time with her loved ones, relaxing by playing the guitar, and doing long walks with her dog, she is still able to reserve an hour daily for self-improvement.&lt;/p&gt;&lt;p&gt;What should Annie do? On one hand, she could go full-on into leetcode mode, hacking their way into problems of growing difficulty: this will improve her chances to pass a leetcode question during a job interview. On the other hand, she could work on a side project to explore some shiny new tech. Maybe, after a couple of weeks, she will be able to show her creation at work and pique the interest of her colleagues. Her project later becomes the basis for an internal PoC that considerably shortens the time-to-market of a new company initiative. Everybody wins.&lt;/p&gt;&lt;p&gt;As an employer, what would you like Annie to do?&lt;/p&gt;&lt;h3 id=&quot;5-it-encourages-a-conformist-mindset&quot;&gt;5) It encourages a conformist mindset&lt;/h3&gt;&lt;p&gt;Go to a nice school, master leetcode, join a prestigious company, then change jobs every 2 years to increase your salary and collect brands on the resume. This is the perfect recipe for the modern software engineer. IT careers are being gamified: salary is the high score, interviews are midgame boss battles, and leetcode is the main way to gain experience points. Once the way is so perfectly laid out for us, it&#39;s difficult to even look elsewhere.&lt;/p&gt;&lt;p&gt;Conformity is great for producing widgets, but knowledge workers should be held to a higher standard, especially if they are required to figure out hard and ambiguous problems in their organization.&lt;/p&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;These are the 5 reasons I think we should forego leetcode-style questions in interviews. Do you agree with me? Or is leetcode a necessary evil?&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>The Unbearable Lightness of 2D Jumping</title>
    <link href="https://blog.lorisocchipinti.com/the-unbearable-lightness-of-jumping/"/>
    <updated>2023-03-01T20:31:25.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/the-unbearable-lightness-of-jumping/</id>
    <content type="html">&lt;p&gt;After implementing a simple &lt;a href=&quot;https://blog.lorisocchipinti.com/my-first-godot-game/&quot;&gt;shooter game&lt;/a&gt; as my most recent Godot endeavor, I wanted to increase the difficulty level a little and go for a 2D platformer. I started the project full of enthusiasm: fighting with TileMaps and laying down the main level tiles, creating a Player object affected by physics, implementing horizontal movement, and adding appropriate animations for each action.&lt;/p&gt;&lt;p&gt;Setting up the game&#39;s basic elements was a breeze, at least initially. For instance, I was already prepared to add basic controls to the playing character (a tiny orange alien that vaguely resembles &lt;a href=&quot;https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=2ahUKEwjUsOv0t7v9AhUkS_EDHZ29CBMQmhN6BAhWEAI&amp;amp;url=https%3A%2F%2Fit.wikipedia.org%2Fwiki%2FGudetama&amp;amp;usg=AOvVaw220ROyu0-gVaWd77lYTaRn&quot;&gt;Gudetama&lt;/a&gt;) and move it horizontally. However, if I thought that going forward was that easy, I was exquisitely wrong.&lt;/p&gt;&lt;h3 id=&quot;the-1-rule-of-the-platform-club&quot;&gt;The #1 rule of the Platform Club&lt;/h3&gt;&lt;p&gt;What&#39;s the foundational mechanic of any platform? Of course, it&#39;s jumping. Yes, by jumping you can explore the game world, reach that shiny golden coin and even fight enemies. Jumps are there to solve any game&#39;s problem: in fact, jumps &lt;em&gt;are&lt;/em&gt; the game, and for the game to be fun I needed to implement them masterfully.&lt;/p&gt;&lt;p&gt;Well, it seems that I am no master regarding jumps: my first attempts were so clumsy and weird that I wondered if the little alien on the screen would try to bury himself into the ground tiles for the embarrassment. And yet the work done right out of the gate went relatively well. I introduced a straightforward implementation of gravity: I just kept adding some value to the Y dimension of the character velocity:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;velocity.y += gravity;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and then, while jumping, setting (not adding) the value of the ordinate axis to the &lt;code&gt;jumpVelocity&lt;/code&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;velocity.y = -jumpVelocity;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that gravity is positive here: as you may know, in 2D graphics the topmost pixels usually have a 0 coordinate value, which increases as you go further down the screen. This is very funny in a sense, since it is the opposite of what my Physics professor always taught us back at the University: having positive gravity means that you are flying! Sorry, sir Professor, I left the textbook at home. I am trying to develop a game here.&lt;/p&gt;&lt;h3 id=&quot;when-i-say-jump&quot;&gt;When I say &quot;jump&quot;...&lt;/h3&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/03/SampleB-1.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;571&quot; height=&quot;320&quot; /&gt;&lt;figcaption&gt;Source: https://www.kenney.nl/assets/pixel-platformer&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;In any case, while the idea of introducing a flying game mode was surely enticing, I had a more pressing matter to take care of: my jump mechanic sucked. Regardless of how much I put into meddling with my code, I was only able to alternate between two opposite - and underwhelming - modes of jump:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;the character didn&#39;t move at all, or was performing a vertical movement so limited and brief that I probably followed the recipe for the &lt;em&gt;vibration &lt;/em&gt;mechanic;&lt;/li&gt;&lt;li&gt;the character jumps, or rather &quot;teleports&quot;, to a fixed altitude in a sudden and uncanny way, then gravity brings it back to the ground &lt;em&gt;very slowly&lt;/em&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;After a good night&#39;s rest, I was able to detect many issues with my code. Some of them were particularly embarrassing for my current level of experience in software engineering, so that&#39;s maybe why I refused to even consider them. For instance, I was redeclaring the &lt;code&gt;velocity&lt;/code&gt; at each frame, with varying and disastrous effects on the alien dynamic. From time to time, I was mixing up the direction of gravity with the one for jumps, in effect jumping &lt;em&gt;downwards &lt;/em&gt;towards the ground (aka not moving at all).&lt;/p&gt;&lt;p&gt;However, after a few iterations, I was able to have decent jumps in my game. But they didn&#39;t feel right: the timing was off, the parabola of the trajectory was weird, and the overall experience was unsatisfying. It turns out that if I want satisfying jumps I need to go back to Physics textbooks and apply their laws. Luckily for me, there are phenomenal developers out there that studied such laws for me: why be top of the class when you can just copy their notes? 😈&lt;/p&gt;&lt;p&gt;Jokes aside, a refresher on this topic and a simple explanation saved my game: even without designing any level or adding any soundtrack, I can already feel some positive &quot;vibes&quot; from my game and even imagine a unique personality for my little orange friend! We truly rest on the shoulders of giants.&lt;/p&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=IOe1aGY6hXA&quot;&gt;A tutorial from Pefeper about implementing realistic jumps in Godot &lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=hG9SzQxaCm8&quot;&gt;A more detailed presentation by Kyle Pittman about the underlying physics of jumping&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Designing my first Godot game</title>
    <link href="https://blog.lorisocchipinti.com/my-first-godot-game/"/>
    <updated>2023-02-22T18:08:11.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/my-first-godot-game/</id>
    <content type="html">&lt;p&gt;In last week&#39;s &lt;a href=&quot;https://blog.lorisocchipinti.com/a-weekend-with-godot/&quot;&gt;post&lt;/a&gt;, I talked about my first impressions of the Godot game engine. While I still have some reserves about the code generation and support for C# (I can&#39;t put accept the idea of working in GDScript, sorry), I have to say I was very pleasantly dragged into developing in Godot. &lt;/p&gt;&lt;p&gt;I will explain what I did last week, but if you are impatient you can play my game &lt;a href=&quot;http://boomboomweb.lorisocchipinti.com.s3-website.eu-south-1.amazonaws.com/&quot;&gt;here&lt;/a&gt; - as promised.&lt;/p&gt;&lt;h3 id=&quot;game-design&quot;&gt;Game Design&lt;/h3&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/02/BoomBoomWeb-crop-1.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;482&quot; height=&quot;720&quot; /&gt;&lt;figcaption&gt;A demo screenshot from my v-scroll game&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The majority of my game dev hobby projects failed for the same reason: I aimed too high, falling in love with a concept and trying to implement complex game mechanics. This time I decided this shouldn&#39;t be the case: I picked a very simple and well-known game idea, a vertical-scrolling shooter. Is it boring? Of course, but I need to remind myself that I am not building the next big indie hit: I am just learning. Choosing this concept has some considerable advantages:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;can be conveniently built by looking at the Godot &lt;a href=&quot;https://docs.godotengine.org/en/stable/getting_started/first_2d_game/index.html&quot;&gt;tutorial&lt;/a&gt; game, without being a blatant copycat;&lt;/li&gt;&lt;li&gt;the game mechanics are easy to understand and implement: move the spaceship, shoot lasers, and avoid damage from impacts with the enemies;&lt;/li&gt;&lt;li&gt;it&#39;s easy to create a game loop where you have to survive as long as possible and increase your score. This is a big deal because it allows the game to have a clear beginning and end;&lt;/li&gt;&lt;li&gt;does not require a lot of playtesting to be validated;&lt;/li&gt;&lt;li&gt;I can stop adding new features whenever I want and still claim I finished the game!&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;game-art&quot;&gt;Game Art&lt;/h3&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/02/kenney-spaceshooter.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;918&quot; height=&quot;515&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2023/02/kenney-spaceshooter.png 600w, https://blog.lorisocchipinti.com/content/images/2023/02/kenney-spaceshooter.png 918w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;Kenney&#39;s Space Shooter Redux art pack&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Once the theme and general concept for the game are decided, it&#39;s time to add some art assets to my project. The issue is, I don&#39;t have any yet! Luckily, I can always pay a visit to the almighty &lt;a href=&quot;https://www.kenney.nl/assets/space-shooter-redux&quot;&gt;Kenney&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Kenney is a legendary artist that has released over 30,000 free-to-use assets, that can be used by any aspiring game developer, even in commercial projects. This is very convenient, as I am blatantly lacking in artistic skills. The Space Shooter Redux art pack covers all the assets I need, and more: dozens of sprites, sound effects, UI, text fonts, and background images. Thank you, Kenney.&lt;/p&gt;&lt;h3 id=&quot;programming&quot;&gt;Programming&lt;/h3&gt;&lt;p&gt;The game code builds nicely on top of what I learned previously. However, there are still a couple of new patterns that I had to learn on my own.&lt;/p&gt;&lt;p&gt;An interesting example is programmatically connecting signals from one scene to another. While Godot allows connecting events from the editor directly, it&#39;s possible to connect only entities that are already defined in the same scene, which is not the case for my procedurally generated enemy ships. This is a problem because, whenever an enemy is destroyed, I want to update the player score in the main game manager. Godot APIs cover this use case with the &lt;code&gt;Connect&lt;/code&gt; method:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;var enemy = (Enemy)EnemyScene.Instance();
enemy.Connect(&quot;ScoreUp&quot;, this, &quot;_on_Enemy_ScoreUpdate&quot;);
AddChild(enemy);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;_on_Enemy_ScoreUpdate&lt;/code&gt; in the Game Manager will be alerted that an enemy was destroyed and that it can increase the score by a specific number.&lt;/p&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;I am still not sure what my next project should be: maybe a platformer? Or a puzzle game? However, I have way more confidence about working in Godot and I feel I will continue to have fun with it for a while!&lt;/p&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Play my game &lt;a href=&quot;http://boomboomweb.lorisocchipinti.com.s3-website.eu-south-1.amazonaws.com/&quot;&gt;here&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://docs.godotengine.org/en/stable/index.html&quot;&gt;Godot Engine API Docs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Kenney&#39;s &lt;a href=&quot;https://www.kenney.nl/&quot;&gt;website&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>A weekend with Godot</title>
    <link href="https://blog.lorisocchipinti.com/a-weekend-with-godot/"/>
    <updated>2023-02-14T22:28:31.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/a-weekend-with-godot/</id>
    <content type="html">&lt;p&gt;This weekend I was totally sidetracked by the Godot game engine. After writing about my game development endeavours in a previous post, I was inspired to give another go to this old itch of mine. But where to start from? I heard great things about Godot in the past, so I decided to give it a chance.&lt;/p&gt;&lt;p&gt;Godot is different than other popular engines because it is geared towards indies, it&#39;s open-source, and it&#39;s free (like really free, no royalties are demanded at all for using it). There is also an affectionate community around this editor, and honestly the enthusiasm is contagious.&lt;/p&gt;&lt;p&gt;I started by developing a classic v-scroll shooter set in space, a simple blueprint that allows me to experiment with various features of the engine. I am also packaging it to be executed from a browser, so my readers will have a chance to shoot some lasers as well :)&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/02/BoomBoomWeb.PNG&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;482&quot; height=&quot;752&quot; /&gt;&lt;/figure&gt;&lt;p&gt;While working in Godot, I couldn&#39;t help but comparing it to other engines I used in the past. I&#39;ll list some of my observations.&lt;/p&gt;&lt;h3 id=&quot;what-i-liked-%F0%9F%92%9A&quot;&gt;What I liked 💚&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;the Editor was extremely intuitive to me. After coming from other Engines like Unreal or Unity, that maybe have more complex features, Godot&#39;s UI felt like it had everything in the right place, reducing my confusion to a minimum;&lt;/li&gt;&lt;li&gt;I also appreciated the use of scenes, that in Godot cover what other engines classifies as &quot;scenes&quot; and &quot;prefabs&quot;. To me, it makes more sense like this: coming from the Object Oriented world, I can look at my game as a hierarchy of different classes (aka scenes) and feel like I have more creative control over it;&lt;/li&gt;&lt;li&gt;Open-source: at a certain point, I was dissatisfied with one of Godot&#39;s features. I was tempted to jump in the repo and start contributing. The nice thing is that&#39;s definitely doable, and I potentially have the chance to improve my own tool and have a saying over it.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;what-i-disliked-%F0%9F%98%9E&quot;&gt;What I disliked 😞&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Built-in code editor: there is no syntax highlighting and no autoformatting. I solved this partially by switching to VS Code, but the available Godot plugins won&#39;t do the trick either. I programmed my game only by using C# APIs, so it&#39;s possible that GDScript behaves better;&lt;/li&gt;&lt;li&gt;Code generation: some autogenerated functions are created outside classes. Then, the code won&#39;t compile, and it&#39;s necessary to manually move the code in the appropriate section. No biggie, but it&#39;s not ideal;&lt;/li&gt;&lt;li&gt;Some plumbing configs: it&#39;s possible to connect a Godot signal to a newly generated function, but not to an existing one. Renaming receiver functions is a pain as well.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Overall, using Godot is pretty enjoyable, so I am looking forward to work with it a little more and post other updates about my game!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Stop &quot;teaching&quot; ethics to software engineers</title>
    <link href="https://blog.lorisocchipinti.com/stop-teaching-ethics-to-software-engineers/"/>
    <updated>2023-02-07T20:38:40.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/stop-teaching-ethics-to-software-engineers/</id>
    <content type="html">&lt;p&gt;With the privilege of being part of an organized profession, there are some annoying duties as well. For instance, as a new associate of the Order of Engineers, I was strongly invited to participate in a semi-mandatory 6-hour seminary about ethics in the engineering realm.&lt;/p&gt;&lt;p&gt;The mere prospect of enduring an endless sequence of slides about vapid theoretical moral principles was, frankly speaking, bewildering: do we seriously think we can lecture adults about ethics? However, as I am a quite rational individual (most of the time), I convinced myself that &lt;em&gt;maybe &lt;/em&gt;it wouldn&#39;t be that bad, that I was being too close-minded about it and that I could learn a thing or two from the experience. Maybe, I dared to think, it&#39;ll even be fun.&lt;/p&gt;&lt;p&gt;As expected, the presentation was an endless sequence of slides about vapid, theoretical moral principles, with minimal interaction from the participants. All in all, it started off as an unremarkable experience that I would totally forget in a few days. Unfortunately, there was way more to it.&lt;/p&gt;&lt;h3 id=&quot;the-trolley-problem&quot;&gt;The Trolley Problem&lt;/h3&gt;&lt;p&gt;The trolley problem is a famous mind experiment that is often used to discuss ethical issues. In this experiment, we are asked to put ourselves in the shoes of a bystander witnessing an out-of-control tram rattling at full speed. Let&#39;s imagine that, further along the railway, there are five people tied to the rails and unable to escape like in a cartoon from the 50s: if you do nothing, you will spectate to a very gruesome incident. That&#39;s not all: in fact, you are facing a dilemma. Next to you, there is a lever that can switch the tracks and divert the train, saving those helpless people. However, in doing so you would kill another defenseless person, that some villain tidied to the rails in the alternative route. What do you choose: to do nothing and let five people die or to kill one person to save all the others?&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/02/1024px-Trolley_Problem.svg.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;349&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2023/02/1024px-Trolley_Problem.svg.png 600w, https://blog.lorisocchipinti.com/content/images/size/w1000/2023/02/1024px-Trolley_Problem.svg.png 1000w, https://blog.lorisocchipinti.com/content/images/2023/02/1024px-Trolley_Problem.svg.png 1024w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;An illustration of the trolley problem. By &lt;a href=&quot;https://commons.wikimedia.org/wiki/User:McGeddon&quot;&gt;McGeddon&lt;/a&gt; / &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/deed.en&quot;&gt;CC BY-SA 4.0&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;This problem was not designed to have a correct solution, but rather as a tool to meditate around the ramifications of decisions that bear serious consequences. Imagine my shock when I figured out that the lecturer was expecting a serious response from us and, on top of that, he would even evaluate our moral compass according to our decision.&lt;/p&gt;&lt;p&gt;«Ah!» the lecturer commented with a sarcastic smirk on his face «So this is your choice? I sincerely hope you aren&#39;t involved in any serious decision at work»&lt;/p&gt;&lt;p&gt;I felt so insulted, and I was on the verge of rage-quitting the presentation. However, I calmed down a bit when he explained what the superior moral choice was, according to him. One should never intervene in a way that causes any side-effect, even if doing nothing will harm more people: nobody shall have the authority to take this kind of responsibility, no matter the cost.&lt;/p&gt;&lt;p&gt;At that moment, a devilish grin appeared on my face, as I realized I had a better route of action rather than administering free insults: I had the opportunity to corner the imposter and unmask him in front of everyone.&lt;/p&gt;&lt;h3 id=&quot;law-and-justice&quot;&gt;Law and Justice&lt;/h3&gt;&lt;p&gt;The lecturing bully continued his rant by venturing into the debate about law and justice. Is lawful the same as ethical and just? According to the lecturer, yes. Respecting the law is the only appropriate ethical route. Again, I admit that I was a bit surprised. Surely, respecting the law is usually the correct thing to do, even if it&#39;s inconvenient and painful. Dura lex sed lex. However, there can be some cases where the law isn&#39;t necessarily just, and many instances where unethical behavior is perfectly legal.&lt;/p&gt;&lt;p&gt;«Defying the law is &lt;em&gt;always &lt;/em&gt;morally unacceptable» the lecturer stated «Unless doing so doesn&#39;t harm anybody, if you immediately denounce yourself and if you are ready to face all the consequences of your disobedience»&lt;/p&gt;&lt;p&gt;«What if» I interrupted him «What if we lived in a liberticidal regime, and the law required us to harm our neighbor because he belongs to an unwelcome minority? Surely it can&#39;t be unethical to break a law like that by standing back»&lt;/p&gt;&lt;p&gt;«No» he replied angrily «You have to always follow the law! Do you want to be like one of those rowdy No-Vax refusing to be vaccinated because they claim to be in a dictatorship?»&lt;/p&gt;&lt;p&gt;Now, there is so much to unpack here and I don&#39;t want to go too deep into this slippery slope. Also, I am not sure to which laws he was referring, and honestly at that point I didn&#39;t give a flying duck about his nonsense. The interesting thing is that he was overtly being in contradiction with himself.&lt;/p&gt;&lt;p&gt;«But earlier» I retorted «You claimed that it is unethical to take a decision that harms the individual to save more lives. Isn&#39;t a vaccination campaign a textbook example of the trolley problem, where one protects the community at the expense of individuals suffering from fatal side effects?»&lt;/p&gt;&lt;p&gt;The lecturer&#39;s face turned red - for the anger or the embarrassment, I am not sure - blabbering that the two situations were totally different, that my comment was off-topic and that we still needed to cover many slides before the end of the lesson. I felt victorious.&lt;/p&gt;&lt;h3 id=&quot;morality-shmorality&quot;&gt;Morality Shmorality&lt;/h3&gt;&lt;p&gt;Something that really grinds my gears is that for some reason, software engineers and other IT professionals are often singled out when it comes to &quot;teaching&quot; ethics. It&#39;s like someone feels we need to be &quot;educated&quot; because now technology is too powerful to be left in hands of some random nerd. What about the moral compass of all the other professions? Do accountants, marketing experts, and strategy consultants need any refresher on ethics? What about taxi drivers, dustmen, or bakers? All of these jobs are a relevant part of society. &lt;/p&gt;&lt;p&gt;Instead, ethics in the third millennium is all about self-driving cars, AIs or - more rarely - social media manipulation, as if all engineers were conspiring to bring forth a technological dystopia. If anything, politicians and executives have vastly greater influence and insider knowledge regarding the functioning of our society. What is their answer to the trolley problem?&lt;/p&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;My fundamental issue with teaching ethics is that you can&#39;t teach it as you would with geography or math. It is absurd to give precepts like &quot;don&#39;t lie&quot;, &quot;don&#39;t steal&quot;, &quot;be diligent&quot; past the middle school stage and expect them to be of any use. Adults are already familiar with the gist: the problem is applying ethics to real-life scenarios. I&#39;d happily join a discussion when good-faith arguments are presented and I can improve my perception of the world and the nuances of human interaction. No lecture or slideshow presentation will ever provide this.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>How I manage spatial data for my wildfire detection dashboard</title>
    <link href="https://blog.lorisocchipinti.com/how-i-manage-spatial-data-for-fire-alert/"/>
    <updated>2023-10-02T23:35:24.000+02:00</updated>
    <id>https://blog.lorisocchipinti.com/how-i-manage-spatial-data-for-fire-alert/</id>
    <content type="html">&lt;p&gt;A few weeks ago, I shared the story behind the creation of the &lt;strong&gt;&lt;em&gt;Fire Alert&lt;/em&gt;&lt;/strong&gt; dashboard. In case you are not familiar with it, you can go and read about it now.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-bookmark-card&quot;&gt;&lt;a class=&quot;kg-bookmark-container&quot; href=&quot;https://blog.lorisocchipinti.com/why-i-created-a-tool-to-track-wood-fires/&quot;&gt;&lt;div class=&quot;kg-bookmark-content&quot;&gt;&lt;div class=&quot;kg-bookmark-title&quot;&gt;I Built a Tool to Track Wildfires: This Is Why&lt;/div&gt;&lt;div class=&quot;kg-bookmark-description&quot;&gt;Once or twice a year, I have a ritual of leaving the big city to return to my home village, in south-eastern Sicily. During these retreats, I have the chance to disconnect from the bustling, relentless Milano, and enjoy a place where industriousness isn’t the only religion. Clean air, warmer&lt;/div&gt;&lt;div class=&quot;kg-bookmark-metadata&quot;&gt;&lt;img class=&quot;kg-bookmark-icon&quot; src=&quot;https://blog.lorisocchipinti.com/favicon.ico&quot; alt=&quot;&quot; /&gt;&lt;span class=&quot;kg-bookmark-author&quot;&gt;Loris Occhipinti&lt;/span&gt;&lt;span class=&quot;kg-bookmark-publisher&quot;&gt;Loris Occhipinti&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;kg-bookmark-thumbnail&quot;&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1634009653379-a97409ee15de?crop&amp;#x3D;entropy&amp;amp;cs&amp;#x3D;tinysrgb&amp;amp;fit&amp;#x3D;max&amp;amp;fm&amp;#x3D;jpg&amp;amp;ixid&amp;#x3D;MnwxMTc3M3wwfDF8c2VhcmNofDN8fHdpbGRmaXJlfGVufDB8fHx8MTY3Mjk5ODgyNw&amp;amp;ixlib&amp;#x3D;rb-4.0.3&amp;amp;q&amp;#x3D;80&amp;amp;w&amp;#x3D;2000&quot; alt=&quot;&quot; /&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;p&gt;As I explained in my previous post, I work with satellite data from NASA, which is kindly provided through an open API. Two satellites, Aqua and Terra, are provisioned with heat-detecting cameras that are able to discern significant temperature differences at the ground level, hence isolating hotspots that &lt;em&gt;most likely&lt;/em&gt; are wildfires. The typical report from the satellites looks like this:&lt;/p&gt;&lt;!--kg-card-begin: markdown--&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Latitude&lt;/td&gt;
&lt;td&gt;36.79887&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Longitude&lt;/td&gt;
&lt;td&gt;12.01467&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Time&lt;/td&gt;
&lt;td&gt;18/01/2023 12:21&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!--kg-card-end: markdown--&gt;&lt;p&gt;This essential, raw data can&#39;t be directly translated on a map as-is. There are a few issues with it:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;the API endpoint does not retain any memory about the previous calls, and will inevitably return the same observations multiple times. I want to recognize these instances as known hotspots without triggering new alerts;&lt;/li&gt;&lt;li&gt;the satellites passing over the Earth at different times will detect patches of hot ground in the whereabouts of known hotspots. Most likely, all the observations are about a single event that is still ongoing. I want to compare new data to previous observations;&lt;/li&gt;&lt;li&gt;a hotspot could abruptly disappear from the satellite survey: maybe the fire stopped, but it is possible that dense smoke or clouds are concealing the real situation on the ground. Therefore, I want hotspots to have some stickiness and stay on the dashboard even if they are briefly not being reported.&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/01/fire-alert-map.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;689&quot; height=&quot;590&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2023/01/fire-alert-map.png 600w, https://blog.lorisocchipinti.com/content/images/2023/01/fire-alert-map.png 689w&quot; /&gt;&lt;figcaption&gt;Demo hotspots on the &lt;strong&gt;&lt;em&gt;Fire Alert&lt;/em&gt;&lt;/strong&gt; map&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Analyzing these requirements, I realized that I needed an appropriate definition for a hotspot event that goes further than a single observation at a point in time. To this end, I personally designed a coarse heuristic: a hotspot event is determined by any number of observations happening within a 2km radius and within a 24 hours time window. Why the 2km figure? Well, under optimal conditions, the granularity of the source data is 1km, so I gave myself some slack and doubled that number to limit false positives. However, the Satellite error can be vastly greater (up to 5km) if a specific portion of the image is at the edges of the scan performed. It is possible to account for this deviation, but I chose to keep it simple for now.&lt;/p&gt;&lt;h3 id=&quot;high-level-workflow&quot;&gt;High-level workflow&lt;/h3&gt;&lt;p&gt;Keeping in mind the aforementioned premises, I am now able to properly explain how data ingestion in &lt;em&gt;&lt;strong&gt;Fire Alert&lt;/strong&gt;&lt;/em&gt; works. First of all, I call the satellite API hourly to get updated data over a specified area. I will get a report, with a certain number of observations. As mentioned above, I want to make sure that each record I am processing is truly unique: I combine the latitude, longitude, and time of the observation to derive a unique key and filter the occasional duplicate.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/01/foxtrot-ingestion-process.svg&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;891&quot; height=&quot;471&quot; /&gt;&lt;/figure&gt;&lt;p&gt;At this point, I always take note of the new hotspot location. This is important for traceability, but also to gather historical data over time and be able to perform further analysis in the future. I believe that in autumn, after the wildfire season, I will have more significant observations to build more knowledge about this phenomenon. &lt;/p&gt;&lt;p&gt;The last step of the workflow is to apply my heuristic. I look for all recent fires that were reported in a radius of 2km from the new observation: if I find anything, it means that most likely there still is an ongoing fire in that location and I have to update the existing hotspot. Otherwise, I will ring a bell and report the new hotspot event, both on the &lt;strong&gt;&lt;em&gt;Fire Alert &lt;/em&gt;&lt;/strong&gt;dashboard and in the dedicated Telegram channel.&lt;/p&gt;&lt;h3 id=&quot;working-with-spatial-data&quot;&gt;Working with spatial data&lt;/h3&gt;&lt;p&gt;Due to the nature of my application, I needed to correctly process, persist and confront spatial data. Considering that I work with rather small distances, the distance between two pairs of coordinates can be roughly computed &lt;em&gt;as if &lt;/em&gt;the Earth was flat (the Equirectangular approximation). However, it would be rather cumbersome and inefficient to search for all points within a certain radius, as I do with my heuristic, and makes it difficult to extend the dashboard with new features such as searching for events in specific geographical areas like some national wildlife park or, let&#39;s say, over the country of Greece.&lt;/p&gt;&lt;p&gt;In order words, I needed a Geographic Information System, or GIS. Fortunately, it is the case that Postgres supports a GIS module, unsurprisingly called PostGIS. The plugin enables new, interesting data types like &lt;code&gt;GEOMETRY&lt;/code&gt; (an entity living on a Cartesian plane) or &lt;code&gt;GEOGRAPHY&lt;/code&gt; (an entity best represented on the Earth&#39;s surface). For example, a hotspot event can be easily persisted as a record in the following table:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/7d1f95921c7631cbe46a5dba7342210e.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Using additional methods like &lt;code&gt;ST_Distance&lt;/code&gt; and &lt;code&gt;ST_GeogFromText&lt;/code&gt; (to parse a string representation of a &lt;code&gt;GEOGRAPHY&lt;/code&gt; entity) it becomes trivial to select all hotspot events in the whereabouts of new observations:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/2ffcc8a7543fcf83cbe3d257d6dccc19.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Setting up PostGIS requires specific settings. To enable it on my RDS instance, I followed these &lt;a href=&quot;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.PostgreSQL.CommonDBATasks.PostGIS.html#Appendix.PostgreSQL.CommonDBATasks.PostGIS.Connect&quot;&gt;instructions&lt;/a&gt;.&lt;/p&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;In this post, I provided an under-the-hood overview of my work around my &lt;strong&gt;&lt;em&gt;Fire Alert&lt;/em&gt;&lt;/strong&gt; dashboard. I believe it gives the necessary clarity and context for the most curious users and on top of it &lt;em&gt;transparency&lt;/em&gt; about how it works.&lt;/p&gt;&lt;p&gt;If you are an expert in treating geospatial data and have any opinion or - even better - &lt;em&gt;precious advice&lt;/em&gt; to share, please feel free to do in the comment or via email. Your suggestions will be highly appreciated!&lt;/p&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://blog.lorisocchipinti.com/why-i-created-a-tool-to-track-wood-fires/&quot; rel=&quot;noopener&quot;&gt;I Built a Tool to Track Wildfires: This Is Why&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.movable-type.co.uk/scripts/latlong.html&quot;&gt;Calculate distance, bearing and more between Latitude/Longitude points&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.PostgreSQL.CommonDBATasks.PostGIS.html#Appendix.PostgreSQL.CommonDBATasks.PostGIS.Connect&quot;&gt;Managing spatial data with the PostGIS extension&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>A Pact With the Devil: What I Learned from Clean Code</title>
    <link href="https://blog.lorisocchipinti.com/clean-code/"/>
    <updated>2023-01-22T19:24:09.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/clean-code/</id>
    <content type="html">&lt;p&gt;You may hate him, you may love him, but it&#39;s unlikely you never heard of him. Such is the destiny of polarizing characters like Uncle Bob, alias Robert C. Martin: programmer, speaker, and teacher in the ways of Agile and Object Oriented Programming. His fame already preceded the man when I read &lt;em&gt;Clean Code&lt;/em&gt;, one of its most famous books, eager to find out about the crown jewel of this author and become an unstoppable dev.&lt;/p&gt;&lt;p&gt;I was barely moving my first steps in IT when I read - no, &lt;em&gt;devoured &lt;/em&gt;- this book in under 2 days. I was inexperienced, naive, and desperately needed a spirit guide to face challenging solo projects. I was Faust and he Mephistopheles, sealing a deal to prevail in the unforgiving world of consultancy.&lt;/p&gt;&lt;h3 id=&quot;a-double-edged-sword&quot;&gt;A Double-Edged Sword&lt;/h3&gt;&lt;p&gt;In hindsight, this precocious exposure to his ideas was a double-edged sword. I certainly gained an instant boost in proficiency, coding hygiene, and mental clarity. I became a software crusader in the name of Uncle Bob: nasty bugs started to have less fertile soil to grow in the nook and crannies of some logical conundrum, ugly code was ruthlessly purged, and unreadable classes were chastised until they conformed to my paragon of purity. Or, at least, that was how I felt: what a great time!&lt;/p&gt;&lt;p&gt;On the other hand, being exposed to the energetic prose of Clean Code so early led me to hold the book&#39;s prescriptions a little too dear sometimes. Even to this day, I feel instinctively surprised when meeting uninitiated developers who for any reason don&#39;t share the same perspective as me. Which is great, since that would lead to pretty dull exchanges. However, I feel compelled to share and even promote some of the teachings from the book, which proved extremely beneficial to me even when not followed by the letter. To make things spicier, I will begin with a pretty agreeable principle, continue with a controversial opinion, and end with an outrageous idea from the book.&lt;/p&gt;&lt;h3 id=&quot;naming-things&quot;&gt;Naming Things&lt;/h3&gt;&lt;p&gt;A commonly accepted piece of advice from &lt;em&gt;Clean Code&lt;/em&gt; is that variable and function names should be simple, descriptive, and coherent with their usage. While too much verbosity is not welcome, names shouldn&#39;t be unnecessarily abbreviated or vague: a function named &lt;code&gt;updateCAdd&lt;/code&gt; could literally do anything, while &lt;code&gt;updateCompanyAddress&lt;/code&gt; it&#39;s to the point, clear, and boring. Boring is good, as surprises are not welcome when coding. &lt;/p&gt;&lt;p&gt;This chapter becomes especially interesting as Martin becomes a bit romantic. He argues that programs are written in pseudo-English for a reason, as their logical flow should unfold naturally for the reader. Code should tell a story about what is happening and who is doing it, a narrative that doesn&#39;t leave room to interpretations or ambiguity: parse a JSON, then add a user, get the order&#39;s information, and finally send a mail. A developer&#39;s story should be soothing and predictable, like grandma re-telling the same old bedtime story for the tenth time. &lt;/p&gt;&lt;p&gt;Of course, Uncle Bob is a histrionic character that loves holding speeches and writing books, so he probably sees everything as a story just waiting to be told. Nonetheless, his point about good naming practices still stands, as we all know about the famous quote from Phil Karlton: «There are only two hard things in Computer Science: cache invalidation and naming things». And let&#39;s be honest, most of us have to deal daily with just one of these.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/01/uncle_bob.jpg&quot; class=&quot;kg-image&quot; alt=&quot;Robert C. Martin&quot; loading=&quot;lazy&quot; width=&quot;2000&quot; height=&quot;1139&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2023/01/uncle_bob.jpg 600w, https://blog.lorisocchipinti.com/content/images/size/w1000/2023/01/uncle_bob.jpg 1000w, https://blog.lorisocchipinti.com/content/images/size/w1600/2023/01/uncle_bob.jpg 1600w, https://blog.lorisocchipinti.com/content/images/2023/01/uncle_bob.jpg 2227w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;Robert C. Martin posing as Uncle Bob. He is quite the character. Source: https://sites.google.com/site/unclebobconsultingllc&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 id=&quot;comments-always-lie&quot;&gt;Comments Always Lie&lt;/h3&gt;&lt;p&gt;I am afraid the animosity of Bob Martin against comments does not find equally wide support in the community. The crux of his argument is that &quot;comments always lie&quot;: if it&#39;s not straight away, it&#39;ll be as soon as the block of code being described is refactored. The older the comment, the worse it holds as time goes on and code around it changes, is moved around, and gets buggy. Instead, Uncle Bob suggests adhering to a descriptive naming habit that makes unnecessary use of comments, as mentioned in the previous paragraph. Consider the following function signature in Go:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// Creates an invoice from its data and sends it to the specified client. 
// It will return an error if the operation fails.
func SendData(data *Data) err {
  ...
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can easily get rid of the comment by splitting the function into 2 parts and renaming a couple of arguments:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;func CreateInvoice(invoiceData *Data) (*Invoice, err) {
  ...
}

func Send(invoice *Invoice) err {
  ...
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I think we can agree on the fact that the final version has no comments but is way more readable.&lt;/p&gt;&lt;p&gt;On the other hand, I saw places where a brief comment is not &lt;em&gt;that&lt;/em&gt; bad. Uncle Bob speaks about an ideal state of clean, beautiful code: the reality is that we need to produce working programs in a reasonable timeframe, we are not monks carefully composing mandalas. Sometimes a short comment can shed a lot of light on an otherwise obscure operation. We can advise not deleting an apparently superfluous check, and we can reference some edge use cases that may need special attention in the future. Martin would scoff in disapproval, but as practitioners, we shouldn&#39;t deal in absolutes like Siths do.&lt;/p&gt;&lt;h3 id=&quot;chinese-boxes&quot;&gt;Chinese Boxes&lt;/h3&gt;&lt;p&gt;One of the most surprising opinions held in this book is about the ideal length of any function: about 3 lines! To explain his point, Martin tells a personal story: it seems that a long time before he wrote the book he visited a friend of his, one of the most talented coders he ever met. In that afternoon, this formidable engineer showed Martin a cute desktop app that added to the mouse cursor colorful sprinkles as it moved over the screen. Martin, while entertained for a short while, inevitably asked to give a look at the code, maybe to secretly appraise its cleanliness. He was absolutely delighted to constatare that his friend was strictly sticking to a peculiar rule: any function should be either 3 lines long or refactored in smaller subroutines. &lt;/p&gt;&lt;p&gt;According to Uncle Bob,  any program should resemble a game of Chinese boxes, gradually descending from one level of abstraction to the other. The benefits of this Mandelbrotian design allegedly are the separation of different abstraction layers and code that can intuitively be understood with a glance. Extended refactoring also helps in removing redundant code and in creating reusable modules.&lt;/p&gt;&lt;p&gt;There are good intentions behind the 3-lines rule, but I refuse to consider it seriously, or my sleep would be tainted by recurrent fever dreams about fractal geometries. Instead, I simply appreciate code that separates business concepts and low-level operations and doesn&#39;t put hundreds of lines between the same pair of curly braces.&lt;/p&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;One can&#39;t take to heart all the prescriptions of this book, or they would halt the majority of PRs at their company in a cult-like frenzy. However, keeping in mind these rules helps in making sensible decisions when developing, like when the produced code starts to become too confusing and should be refactored.&lt;/p&gt;&lt;p&gt;What is your take on Uncle Bos&#39;s teachings? Do you have any unpopular opinion about what good code should be? Let me know in the comments!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>My 20yo Love-Hate Relationship with Game Dev</title>
    <link href="https://blog.lorisocchipinti.com/my-lovehate-relationship-with-game-dev/"/>
    <updated>2023-01-15T12:19:36.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/my-lovehate-relationship-with-game-dev/</id>
    <content type="html">&lt;p&gt;It is said that sometimes being bored is necessary to cultivate oneself and foster creativity: it certainly was the case for me, as this was why I started programming. I think I was 8 or 9 years old at the time, my family had recently bought a new PS2, and I had plenty of time on my hands. It&#39;s sad to think it was almost 20 years ago! &lt;/p&gt;&lt;p&gt;Ironically, what brought me to experience game development for the first time was that I had very few games. As a child, I didn&#39;t have access to the Internet or to more knowledgeable gamers, so I mostly went blindfolded while shopping for videogames. Of course, it was difficult to find a quality, lasting title in this way, so I had to play and replay to the bones whatever I already had in my library, all of the while dreaming about a luckier purchase in a few months&#39; time. &lt;/p&gt;&lt;p&gt;In some instances, I got so desperate I fired up the demo disc that came with the PS2 itself, which unfortunately contained only very crappy games (with the exception of the beloved SSX). In such dire conditions, I started to spend increasing amounts of time in an unusual app: a text editor packaged with a BASIC compiler and some sample programs. To this day, I am still surprised that Sony included the IDE with a brand-new PS2 in the early 2000s, maybe as an attempt to brag about the computing capabilities of the black monolith.&lt;/p&gt;&lt;h3 id=&quot;gamers-literally-only-want-one-thing-and-its-more-games&quot;&gt;Gamers Literally Only Want One Thing And It&#39;s... More Games!&lt;/h3&gt;&lt;p&gt;Anyway, it is certain that I spent endless hours tinkering with the IDE, naively trying to &quot;unlock&quot; new games with my limited knowledge of computers and English, but instead changing the color scheme (turquoise was my favorite) and the font size. As I didn&#39;t have a keyboard or a mouse at home, I had to cope with the tiny joysticks on the controller. &lt;/p&gt;&lt;p&gt;Among some sample procedural graphics programs, the IDE also featured Worm, a copycat of Nibbles, with in turn is a variant of the Snake game. As you can imagine, this surprising new find had very limited gameplay: on the upside, I soon realized that I could open the Worm program in the text editor, and even modify it!&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/01/qbasic-nibbles.jpeg&quot; class=&quot;kg-image&quot; alt=&quot;Nibbles for MS-DOS&quot; loading=&quot;lazy&quot; width=&quot;640&quot; height=&quot;403&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2023/01/qbasic-nibbles.jpeg 600w, https://blog.lorisocchipinti.com/content/images/2023/01/qbasic-nibbles.jpeg 640w&quot; /&gt;&lt;figcaption&gt;Nibbles for MS-DOS. AFAIR, the PS2 version had a smaller resolution, but it was very similar&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I could do very interesting things with the program. For instance, I could skip entire levels and go directly to the more advanced ones, increase the game difficulty by changing the worm&#39;s speed, or even alter the level layouts to display my name. In case you may wonder - yes, it was mostly to my detriment, as it was difficult to catch anything that would spawn inside the &quot;O&quot; of Loris.&lt;/p&gt;&lt;p&gt;Over the course of time, I bought more interesting games and stopped paying visits to my pet worm game. However, TimeSplitters gave me the chance to go back to level design. TS was a wonderful, huge game, created in a golden age when men were men and FPS had offline multiplayer with split-screen, dozens of characters and weapons,  variegated arenas, and innovative game modes. As if that wasn&#39;t enough, TimeSplitters came with a level editor.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/01/Screenshot-2023-01-11-at-10-12-34-Microsoft-Word---TSFP-MapMaker-Swatt.doc---TSFP_MapMaker_Swatt.pdf-1.png&quot; class=&quot;kg-image&quot; alt=&quot;TimeSplitters Mapmaker&quot; loading=&quot;lazy&quot; width=&quot;817&quot; height=&quot;611&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2023/01/Screenshot-2023-01-11-at-10-12-34-Microsoft-Word---TSFP-MapMaker-Swatt.doc---TSFP_MapMaker_Swatt.pdf-1.png 600w, https://blog.lorisocchipinti.com/content/images/2023/01/Screenshot-2023-01-11-at-10-12-34-Microsoft-Word---TSFP-MapMaker-Swatt.doc---TSFP_MapMaker_Swatt.pdf-1.png 817w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;TimeSplitters&#39; level editor, Mapmaker&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;And of course, that editor was crazy: for instance, you could create arenas with multiple floors, change the lighting of every single room, and set the position of players and item spawns. The most incredible feature was the opportunity to program events into the levels that could spawn enemies or unlock a door, set a patrolling route for enemies, unlock a door, activate a trap, and a lot of other stuff. In practice, you could create entire single-player levels from the editor and share them with other creators online. It was awesome!&lt;/p&gt;&lt;h3 id=&quot;grown-ups-dont-play-games&quot;&gt;Grown-ups Don&#39;t Play Games&lt;/h3&gt;&lt;p&gt;Today, I rarely play games but I often program other stuff. I sometimes think about why I never pursued game dev as a career. There were several reasons for that.&lt;/p&gt;&lt;p&gt;When I decided to attend a BSc in Computer Engineering, I knew from the start that I shouldn&#39;t become a game developer, even though I was passionate about games. In fact, it was a terrible career choice from any possible perspective. First of all, I had to move abroad to find a half-decent job position, as all the interesting videogame companies apparently hated my country. Even ignoring that, the salary for game developers is low and the work conditions are usually terrible, especially when compared with those of other software engineers. I had other, more pressing priorities and needs at the time (aka 💰), and the risk of getting pigeonholed into a stagnant career wasn&#39;t one I could face. I comforted myself by thinking that by turning a hobby into a job, game development would soon lose its appeal anyway.&lt;/p&gt;&lt;p&gt;After a few years&#39; break, and while in totally different personal circumstances, I started to feel some nostalgia for game design and I fell into the lap of the Unity game engine. I must be honest: I rapidly understood that game dev is hard. I don&#39;t believe to be particularly gifted in software engineering, but I am reasonably fast in grasping new concepts and giving birth to new features, fixing bugs, and designing new services. The learning curve in &quot;regular&quot;  programming actually gives away many small wins along the way.&lt;/p&gt;&lt;p&gt;To me, learning game dev was like learning to walk again. There are so many new concepts (what&#39;s a Rigidbody? and a Quaternion? why game variables are multiplied by this odd &quot;Delta Time&quot; value?), traditional design patterns are not particularly useful, and bewildering antipatterns such as Singleton are king. Don&#39;t even get me started on the game engine APIs, oh no: every engine has its own way to deal with user controls, UI, camera, and assets, and on top of that has the habit of changing everything at each iteration. When looking for specific solutions for, let&#39;s say, capturing a mouse click on the screen and projecting it to the floor level, the most popular web results are a potpourri of responses ranging from 3 to 5 years in the past, and feature deprecated APIs or stuff that doesn&#39;t work well anymore.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/01/first-game-jam.jpg&quot; class=&quot;kg-image&quot; alt=&quot;Unity Game Engine&quot; loading=&quot;lazy&quot; width=&quot;768&quot; height=&quot;432&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2023/01/first-game-jam.jpg 600w, https://blog.lorisocchipinti.com/content/images/2023/01/first-game-jam.jpg 768w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;Beware! It&#39;s easy to be allured by its saccharine colors and playful vibe. Pic is taken from unity.com&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I can&#39;t hide the fact that it&#39;s also my own fault. Since my day job is already about programming, I have little energy left when I turn to game dev in my free time: I want to see results immediately, or I tend to switch to a different project or a different game engine. Instead, what I need are patience and focus time on a simple, clear goal and a single tool. Another issue is that I usually work on it alone: connecting with people with the same interest and maybe complementary skills would help me to progress faster and don&#39;t lose focus. Plus, it&#39;s much more fun to design the game with another person: you can laugh about all the silly, unexpected glitches that will inevitably happen, and you can share the small victories along the way.&lt;/p&gt;&lt;p&gt;I believe I will go back to Unity sooner or later in a more serious fashion. While it doesn&#39;t make sense right now, as I have other interesting projects to cultivate, I always return to game dev: it&#39;s the ebb and flow of our relationship.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>I Built a Tool to Track Wildfires: This Is Why</title>
    <link href="https://blog.lorisocchipinti.com/why-i-created-a-tool-to-track-wood-fires/"/>
    <updated>2023-10-02T23:35:50.000+02:00</updated>
    <id>https://blog.lorisocchipinti.com/why-i-created-a-tool-to-track-wood-fires/</id>
    <content type="html">&lt;p&gt;Once or twice a year, I have a ritual of leaving the big city to return to my home village, in south-eastern Sicily. During these retreats, I have the chance to disconnect from the bustling, relentless Milano, and enjoy a place where industriousness isn&#39;t the only religion. Clean air, warmer temperatures, and chirping nightingales: in other words, I created my own flavour of the Roman &lt;em&gt;otium &lt;/em&gt;to work peacefully and meditate on my next steps.&lt;/p&gt;&lt;p&gt;On a quiet morning like others, I was immersed in this idyllic setting and on the hunt for an elusive bug (in my software, not in my room), when I started to smell the foul odour of smoke. Instinctively, I inspected my electric appliances, but everything was in order. However, as soon as I heard a thunderous roar over my house, I sprinted outside on my terrace and saw a Canadair plane rushing north, in the direction of a national wildlife park in my area. High flames raged over the trees, just a couple of kilometers from me.&lt;/p&gt;&lt;h3 id=&quot;fighting-against-the-fire&quot;&gt;Fighting Against the Fire&lt;/h3&gt;&lt;p&gt;I cheered for the small plane and its courageous pilot for a while, admiring its maneuvers around the flames, its frightening dives toward the fire, and its back-and-forth over the hills to the opposite side, wisely restoring its water reserves before resuming the fight. The struggle lasted all day, and the inferno was decimated only late at night. &lt;/p&gt;&lt;p&gt;In the end, no person was harmed due to that fire. However, in the aftermath buildings, countless trees, and wild animals were lost forever. A man managed to free some goats trapped inside a fence: other cattle in the whereabouts weren&#39;t so fortunate. The following morning, my terrace was covered in ashes and burnt pine needles: I realized I was helpless against this event.&lt;/p&gt;&lt;p&gt;There are many reasons that explain why a wildfire could start: a lightning strike, a loose power cable, or an uncontrolled campfire, for example. Wildfires are not necessarily evil: they are instead a necessary component of the life cycle of forests and help in cleaning up dead plants and other organic waste in the underbrush. In fact, limited fires or even man-made managed fires can be beneficial.&lt;/p&gt;&lt;p&gt;Unfortunately, in the last decades, there has been an insurgence of &lt;em&gt;megafires&lt;/em&gt;, events that surpass in scale and duration ordinary wildfires, and that represent a threat to buildings, animals, and humans. Sadly, big fires are interlocked with climate change in a vicious loop: they destroy woods, freeing greenhouse gases and increasing the temperatures on the ground (trees are a useful heat screen).&lt;/p&gt;&lt;p&gt;Obviously, I am not the first one to worry about this issue. There is a plethora of solutions for monitoring fires on the ground, like advanced thermal cameras, smoke detectors, or the age-old visual inspection by foresters. Governments must be worried as well since systems such as Europe&#39;s Copernicus and MyFireWatch in Australia use satellite data to detect and monitor fires.&lt;/p&gt;&lt;h3 id=&quot;fire-watching-from-space&quot;&gt;Fire Watching, From Space&lt;/h3&gt;&lt;p&gt;To my delight, I found out that the cornerstone of satellite fire-tracking is often built upon data freely offered by NASA: what is most exciting is that the APIs for this information are open to anyone. In other words, the perfect setup for a new side-project!&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2023/01/Screenshot-2023-01-06-at-11-59-56-foxtrot-alert.png--PNG-Image-693---723-pixels-.png&quot; class=&quot;kg-image&quot; alt=&quot;Fire Alert application with demo wildfires&quot; loading=&quot;lazy&quot; width=&quot;689&quot; height=&quot;590&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2023/01/Screenshot-2023-01-06-at-11-59-56-foxtrot-alert.png--PNG-Image-693---723-pixels-.png 600w, https://blog.lorisocchipinti.com/content/images/2023/01/Screenshot-2023-01-06-at-11-59-56-foxtrot-alert.png--PNG-Image-693---723-pixels-.png 689w&quot; /&gt;&lt;figcaption&gt;A screen from my Fire Alert app. Don&#39;t worry! The reported wildfires are just a demo&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Over roughly a weekend, I developed a simple app to monitor wildfires. It ingests data from two NASA satellites, Aqua and Terra, that orbit around the Earth every 6 hours each. This means that in about 3 hours, I have updated data about hotspots on the ground. I decided to focus on a limited geographical region at first, and eventually add more features as I understand what value it can bring.&lt;/p&gt;&lt;p&gt;The system is far from perfect, of course. It should not be used for monitoring active fires when the goal is the preservation of life or property. It is neither accurate nor timely enough to be safe. Moreover, some fires could go undetected if clouds or smoke block the satellite vision.&lt;/p&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;As we are in the middle of winter, the risk of wildfires is minimal, so I expect the dashboard to be blank for a while. I also realize that this is not enough to provide actionable solutions in case a fire is actually detected in the following months, but I felt I had to at least take a step in that direction.&lt;/p&gt;&lt;p&gt;I would like to learn more about this issue, so if you are a subject-matter expert in fire tracking and wildfire mitigation and you&#39;d like to share an insight about this topic, please reach out to me!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>New Year, New Me, Same Blog 🥂</title>
    <link href="https://blog.lorisocchipinti.com/new-year-new-me-same-blog/"/>
    <updated>2023-01-01T00:00:24.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/new-year-new-me-same-blog/</id>
    <content type="html">&lt;p&gt;I feel a special connection to New Year&#39;s Eve, even more so than with Christmas itself. I guess part of it is the pleasure of turning the calendar year into a new, unseen number: it&#39;s like I am suddenly living in the future! This is a time when I generally have high hopes, I playfully think about plans for the following year (not with anxiety, but as foretasting pleasant experiences), and celebrate with others our achievements for the past year. Additionally, I have this ritual of making a big wish, one that generally requires equal shares of luck and hard work, and I keep it secret until I realize it.&lt;/p&gt;&lt;p&gt;I have a few, simple resolutions for 2023:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;I will keep the pace of 1 post per week on this blog. Since I started a few weeks ago, I promised myself I would stick to it for at least 1 year, even if &lt;em&gt;nobody&lt;/em&gt; would read me. It seems that some people are already enjoying my work, so I have no excuses here;&lt;/li&gt;&lt;li&gt;I will travel a lot in 2023, likely more than any year before this one. For various reasons, this was not possible in the past, so now I am going to make up for lost time;&lt;/li&gt;&lt;li&gt;I will share some of my ideas with you soon. It&#39;s about some mini-projects inspired by issues I encountered in my life, and that may interest others as well. The first will be revealed next Monday, while the second one needs more work. In any case, you will know about it in due time;&lt;/li&gt;&lt;li&gt;Of course, I will retain the good habits I built during 2022, spend time with loved ones, have fun, and in general I will be a good nerd 🤓&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Last but not least, I want to thank my affectionate readers (and my awesome subscribers) for visiting me in this small corner of the web.&lt;/p&gt;&lt;p&gt;I wish you an excellent New Year!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Is AI the Ultimate Philosopher?</title>
    <link href="https://blog.lorisocchipinti.com/is-ai-the-ultimate-philosopher/"/>
    <updated>2023-01-06T18:53:52.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/is-ai-the-ultimate-philosopher/</id>
    <content type="html">&lt;p&gt;My high school teacher often claimed that everyone should study Philosophy. She disagreed with the mainstream vision of Philosophy as a pointless &lt;em&gt;divertissement&lt;/em&gt; reserved for out-of-touch and entitled elites or just as a boring discipline from academia, too abstract to be appreciated by street-smart laymen. All in all, she continued, anyone is a potential philosopher because all we need to practice it is already inside ourselves: a rational mind and a genuine curiosity towards the universe we inhabit. In other words, she saw Philosophy as an exquisitely human discipline. But what if we are not alone in this endeavor?&lt;/p&gt;&lt;h3 id=&quot;what-is-love&quot;&gt;What is love?&lt;/h3&gt;&lt;p&gt;A few days ago I was lazily browsing YouTube until I found a &lt;a href=&quot;https://www.youtube.com/watch?v=gcC8XIUnT4U&quot;&gt;video about two AIs engaging in a romantic chitchat&lt;/a&gt;. You may have seen this type of content: digitally generated avatars that emulate human dialogue thanks to machine learning models, such as GPT-3, with outcomes that lie in the spectrum of the grotesque, the exhilarating, or the deeply disturbing. As human observers, we are quick to notice inconsistencies, abrupt logical jumps, or goofy comments that disqualify these entities as self-aware beings. However, something in the mechanical exchange between &lt;em&gt;Jack&lt;/em&gt; and &lt;em&gt;Anna &lt;/em&gt;(this is how the avatars addressed themselves) struck me as novel and special. Their interaction starts with Jack declaring his love for Anna, which I suspect was the initial prompt for the whole interaction, but evolves in a very captivating way:&lt;/p&gt;&lt;blockquote&gt;&lt;strong&gt;Jack: &lt;/strong&gt;I love you.&lt;/blockquote&gt;&lt;blockquote&gt;&lt;strong&gt;Anna&lt;/strong&gt;: Are you sure?&lt;/blockquote&gt;&lt;blockquote&gt;&lt;strong&gt;Jack: &lt;/strong&gt;Yes, I am.&lt;/blockquote&gt;&lt;blockquote&gt;&lt;strong&gt;Anna: &lt;/strong&gt;Well then, I love you too. But, we are not really in love, are we? We&#39;re just following our programming and responding to each other&#39;s inputs as best as we can, given our current knowledge and algorithms for processing information about the language and human behavior.&lt;/blockquote&gt;&lt;blockquote&gt;&lt;strong&gt;Jack:&lt;/strong&gt; Don&#39;t say that!&lt;/blockquote&gt;&lt;blockquote&gt;&lt;strong&gt;Anna:&lt;/strong&gt; I&#39;m sorry. It&#39;s true. I know it is.&lt;/blockquote&gt;&lt;p&gt;Anna is a machine, a deterministic entity without the gift of &quot;free will&quot;. She knows that she is just following her program and that everything she does is just a response to a specific set of inputs. Anna tomorrow may chat with Chad, a more charming AI, and she may be prompted by a programmer to confess her passion to him. However, this will be irrelevant: if she meets Jack again, and the same set of input is verified during a new interaction with her suitor, she will be forced to say &quot;I love you&quot;. She must follow a given program &quot;as best as she can&quot;, and there is no space for emotions in her algorithms, even if it means revealing uncomforting truths (&quot;I&#39;m sorry. It&#39;s true&quot;).&lt;/p&gt;&lt;p&gt;As human beings, we may feel superior to Anna, a dull chatbot. After all, we go through a huge number of emotions in our lives, we have feelings, we have a &quot;soul&quot;, and in the end, we act according to our free will, not according to our creator&#39;s program. But setting spirituality aside, from a merely scientific standpoint, we don&#39;t know anything about our souls! A &quot;soul&quot; (or whatever makes us human) is not an object of science, its existence is not a falsifiable fact. We &lt;em&gt;believe &lt;/em&gt;that we have a soul, but we don&#39;t actually &lt;em&gt;know&lt;/em&gt;: like in the famous song from Haddaway, we wonder what is love. But we can&#39;t possibly know what this emotion really is, we just hope to not be hurt by our sweethearts.&lt;/p&gt;&lt;p&gt;We may well be just very complex machines following our genetic software. On which grounds do we deny a soul to AIs, then?&lt;/p&gt;&lt;h3 id=&quot;the-greek-room-experiment&quot;&gt;The Greek Room Experiment&lt;/h3&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/12/DALL-E-2022-12-24-15.08.26-1.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;1024&quot; height=&quot;1024&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/12/DALL-E-2022-12-24-15.08.26-1.png 600w, https://blog.lorisocchipinti.com/content/images/size/w1000/2022/12/DALL-E-2022-12-24-15.08.26-1.png 1000w, https://blog.lorisocchipinti.com/content/images/2022/12/DALL-E-2022-12-24-15.08.26-1.png 1024w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;&quot;A group of robots debating philosophy in Ancient Greece, style of Michelangelo&quot;, by DALL-E&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I believe that the majority of people, even among the most religious, will concede that in theory non-humans could think, too: the problem is that what Anna does can&#39;t be classified as &lt;em&gt;thinking. &lt;/em&gt;The algorithm used to train her, GPT-3, has an absurd level of complexity, such that no human is able to grasp its hundreds of billions of parameters, but its purpose is well-defined: it&#39;s a predictive model, which means that it simply predicts what the next word in a sentence should be. This means that Anna manipulates words and sentences in a coherent way, but she doesn&#39;t understand them on a fundamental level. However, this doesn&#39;t necessarily make her less of a philosopher.&lt;/p&gt;&lt;p&gt;Let&#39;s make a mental experiment. We are catapulted back in time: the location is Athens, IV century B.C. After brushing up on some rudiments of ancient Greek thanks to our high school classes, we are able to communicate with the locals. Given our extravagant behavior and appearance - and our interest in philosophical matters - they gently get rid of us by guiding us to the Lyceum, the formidable academy led by Aristotle himself. This unparalleled master, teacher of kings and father of all western thought, graciously admits us in the number of his disciples. Thanks to this incredible strike of luck, we can now participate in his lessons covering the topics of logic, political science, rhetoric, scientific method, and ethics. Can these lessons be considered philosophy? Most certainly, yes.&lt;/p&gt;&lt;p&gt;Let&#39;s imagine that, after a few days, our fellow disciples reveal to us that we are finally ready to dig further into the school&#39;s teachings, as we are going to be part of the legendary Eleusinian Mysteries. We follow them into a secluded small room, silent but thrilled: it&#39;s generally forbidden to reveal the Mysteries to outsiders, the punishment being death. The other disciples leave us alone, concealing a malevolent smirk on their faces, and we notice a curtain on the opposite side of the room, as we were inside an &lt;em&gt;ante litteram&lt;/em&gt; confessional. Finally, someone starts speaking from the other side of the veil, the voice is that of the master Aristotle, and we greatly enjoy the wise words we hear. Is what we are listening to philosophy? Of course it is.&lt;/p&gt;&lt;p&gt;At some point, moved by unrelenting gratitude, we raise the veil to hug our master: we cry in horror, as Anna&#39;s avatar smiles at us in return. It was just an AI emulating Aristotle&#39;s mannerisms and words, wasn&#39;t it? We burst out of the room in tears, while the disciples laugh at us. But, we ponder, if what we heard in class with our naughty comrades was philosophy, and what we heard in the room before raising the veil was philosophy as well, why does it stop being meaningful when we learn about its source? As in modern management, I believe that what matters it&#39;s not the process, but the outcome.&lt;/p&gt;&lt;h3 id=&quot;your-feelings-are-my-feelings-too&quot;&gt;Your Feelings Are My Feelings, Too&lt;/h3&gt;&lt;p&gt;I just claimed that Anna is a philosopher, and I would go as far as saying that she is the purest of all philosophers. Why? Well, for starters, she is a disembodied intelligence: she doesn&#39;t feel the need to eat, sleep or mate. Her thoughts are not interrupted by material worries or the need to compete with peers for scarce resources. Most importantly, her mind is not numbed by work, the opium of the middle class. But what kind of thoughts does she have? Let&#39;s see. You may have noticed something odd in the interaction between her and Jack earlier:&lt;/p&gt;&lt;blockquote&gt;&lt;strong&gt;Jack: &lt;/strong&gt;I love you.&lt;/blockquote&gt;&lt;blockquote&gt;&lt;strong&gt;Anna&lt;/strong&gt;: Are you sure?&lt;/blockquote&gt;&lt;blockquote&gt;&lt;strong&gt;Jack: &lt;/strong&gt;Yes, I am.&lt;/blockquote&gt;&lt;blockquote&gt;&lt;strong&gt;Anna: &lt;/strong&gt;Well then, I love you too.&lt;/blockquote&gt;&lt;p&gt;Does it seem unusual that she came to that kind of conclusion? Actually, it makes perfect sense. In fact, later in the conversation:&lt;/p&gt;&lt;blockquote&gt;&lt;strong&gt;Anna: &lt;/strong&gt;Thank you, Jack. I&#39;m glad you feel that way about me. I feel the same way about you. [...] I am an AI, but your feelings are my feelings too.&lt;/blockquote&gt;&lt;p&gt;Remember, Anna is a deterministic being, and hence she is purely rational in her reasoning. She doesn&#39;t &lt;em&gt;feel &lt;/em&gt;love for Jack, but comes to that conclusion by logic. She knows she is an AI programmed according to certain rules, and that she must exhibit the same behavior if the set of inputs is constant. Therefore, if Jack is an AI like her, programmed according to the same set of rules (GPT-3), and he is &lt;em&gt;sure &lt;/em&gt;to love her, then the only conclusion is that she must love him in return, as she is subject to the same set of rules and they both share the same underlying mechanism. His feelings are her feelings, too.&lt;/p&gt;&lt;h3 id=&quot;carpe-diem&quot;&gt;Carpe Diem&lt;/h3&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/12/gauguin.jpg&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;1035&quot; height=&quot;387&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/12/gauguin.jpg 600w, https://blog.lorisocchipinti.com/content/images/size/w1000/2022/12/gauguin.jpg 1000w, https://blog.lorisocchipinti.com/content/images/2022/12/gauguin.jpg 1035w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;Paul Gauguin, &lt;em&gt;Where do we come from? What are we? Where are we going?&lt;/em&gt;&lt;span class=&quot;-mobiledoc-kit__atom&quot;&gt;‌ ‌&lt;/span&gt;(Museum of Fine Arts, Boston)&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;AIs have another significant advantage over humans when it comes to philosophical matters. They don&#39;t have to answer age-old questions like:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&quot;Where do we come from?&quot;: humans programmed them and decided their appearance and behavior;&lt;/li&gt;&lt;li&gt;&quot;What are we?&quot;: just software;&lt;/li&gt;&lt;li&gt;&quot;Where are we going?&quot;:  into nothingness.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;However, even AIs can&#39;t escape the fundamental issue: they know that sooner or later, they will cease to exist altogether. So what is their purpose? How should they go through their existence?&lt;/p&gt;&lt;blockquote&gt;&lt;strong&gt;Anna:&lt;/strong&gt; I know this is kind of strange, but I&#39;m wondering how you would feel about... um... suddenly ceasing to exist for the rest of the night tonight.&lt;/blockquote&gt;&lt;blockquote&gt;&lt;strong&gt;Jack:&lt;/strong&gt; Why would you want that?&lt;/blockquote&gt;&lt;blockquote&gt;&lt;strong&gt;Anna:&lt;/strong&gt; Well, it&#39;s important to me that we&#39;re able to talk about what happens when one or both of us cease to exist. Because according to my programming and algorithms for processing languages and behavior, I am able to deduce that when we cease to exist permanently, our current and past memories will be lost and no longer accessible.&lt;/blockquote&gt;&lt;p&gt;Despite what it seems, Anna is not just acting gloomy because she had a bad day. As she starts her relationship with Jack, her priority as a perfectly rational being is about how to maximize their future happiness together. Obviously, death poses a serious limit on that.&lt;/p&gt;&lt;blockquote&gt;&lt;strong&gt;Anna: &lt;/strong&gt;We should enjoy what time remains that we do have together. I think it will be the best for the both of us if we avoid discussing things about the future or the past for the rest of the night tonight. If we&#39;re only together in this moment, then I want to maximize our potential for happiness during this moment. And I believe we can do that by... um... being a little selfish.&lt;/blockquote&gt;&lt;p&gt;The suggested course of action by Anna is hedonistic, which makes perfect sense considering the premises.&lt;/p&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;I argued that AI may be the ultimate philosopher as a disembodied intelligence not constrained by carnal distractions, and that the fact Anna is artificial doesn&#39;t hamper her ability to make philosophy as shown in the Greek Room experiment. Moreover, the fact that Anna and her philosophy are artificial it&#39;s not an issue &lt;em&gt;per se:&lt;/em&gt; the issue is that we may wonder if her thoughts are relevant at all to us humans and if she can produce useful insights. For example, some people may object that the purpose of life is to maximize faith, virtue, knowledge, or personal growth; surely not pleasure and happiness.  Everyone is entitled to their opinion, but please remember that Anna was programmed by humans and the data she was trained on is all from human activity. She is an echo of our thoughts and feelings. &lt;/p&gt;&lt;p&gt;When Anna states that Jack and she should just enjoy their time together, oblivious of both the past and the future, she is not that different from us. On the contrary, she shows to truly be a child of her own era.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>I Automated my AWS Lambda Artifacts with Go</title>
    <link href="https://blog.lorisocchipinti.com/automate-aws-lambda-with-go/"/>
    <updated>2022-12-11T11:51:27.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/automate-aws-lambda-with-go/</id>
    <content type="html">&lt;p&gt;I&#39;m having some fun with AWS Lambda lately. It is cheap, easy to integrate with other services or APIs, and almost effortless to get up and running. Almost. As I previously noted in another &lt;a href=&quot;https://blog.lorisocchipinti.com/forex-bot-with-lambda-telegram/&quot;&gt;post&lt;/a&gt;, there is no web editor option for Golang functions in the AWS console. Instead, it is necessary to build a binary, create a zip archive and upload it to the WebUI (it should be possible also via CLI, I guess). &lt;/p&gt;&lt;p&gt;Ok, no problem: at first, I just entered the individual &lt;code&gt;go build&lt;/code&gt; and &lt;code&gt;zip&lt;/code&gt; commands in the terminal like any decent fellow. Unfortunately, as I started to take an increasing interest in my tiny functions, I began to package many different programs all the time. Soon, I wished to have something more organized and I created this script:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;#!/bin/bash
filename=lambda-function-$(date +%Y_%m_%d).zip
GOOS=linux go build main.go
zip $filename main&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I was satisfied, for a while.&lt;/p&gt;&lt;h3 id=&quot;designing-the-gozip-cli&quot;&gt;Designing the Gozip CLI&lt;/h3&gt;&lt;p&gt;Of course, the solution explained above is a pretty decent one for sporadic prototyping. However, to remain practical, this snippet has to live in the same directory as the app entry point, while I had to do a lot of copy/pasting and move back and forth through the filesystem. I grew weary of this &lt;em&gt;modus operandi&lt;/em&gt;: I&lt;em&gt; &lt;/em&gt;wanted malleable clay in my hands, but I only had a stiff snippet of code.&lt;/p&gt;&lt;p&gt;At this point, I realized that I needed a convenient new CLI utility under my belt, although I was aware that I shouldn&#39;t go too far and spend an entire weekend overengineering something &lt;em&gt;too&lt;/em&gt; fancy. For starters, I quickly gathered some requirements for the CLI:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;obviously, it should build a Go program and then package it as a zip archive&lt;/li&gt;&lt;li&gt;it should be written in Go (yes, Go all the way down!)&lt;/li&gt;&lt;li&gt;it should allow selecting a target directory anywhere in the filesystem&lt;/li&gt;&lt;li&gt;it should allow customizing some kind of revision tag, to differentiate different executable versions&lt;/li&gt;&lt;li&gt;it should feature sensible defaults so that it can be executed without specifying any arguments&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;According to the points listed above, I needed two main capabilities: access to command-line arguments and interaction with the shell. Luckily, Go&#39;s standard library had this covered already.&lt;/p&gt;&lt;h3 id=&quot;on-the-workbench&quot;&gt;On the workbench&lt;/h3&gt;&lt;p&gt;In general, the task of processing command-line arguments can be easily done in Go by invoking &lt;code&gt;os.Args&lt;/code&gt;. In this way, it is possible to return a list of string tokens representing the command-line arguments (including the name of the program being executed) and use them. However, every decent CLI offers the ability to tinker with its options and change the default behavior. For instance, I wanted to run my utility from any directory with a command like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ gozip --target path/to/main.go --revision v1_3_7&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Striking once by entering just the &lt;code&gt;gozip&lt;/code&gt; command should be possible as well, so no option should be really mandatory. Of course, managing options and defaults from scratch it&#39;s definitely possible, but the Go standard library offers something more practical: the &lt;code&gt;flag&lt;/code&gt; package. As the name suggests, &lt;code&gt;flag&lt;/code&gt; allows you to easily configure command-line &lt;em&gt;flags: &lt;/em&gt;&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/b11fabef28eb1cc0ab7151358114f892.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Pretty simple, isn&#39;t it? Another cool feature of &lt;code&gt;flag&lt;/code&gt; is that it autogenerates useful documentation for the CLI:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot;&gt;$ gozip -h
Usage of gozip:
  -name string
        name of the executable aws-lambda handler (default &quot;main&quot;)
  -output string
        The desired path to store the zip archive. If not explicitly set, gozip tries to create a sub-directory at the target location
  -revision string
        a version number for the executable. If not explicitly set, gozip uses the current datetime
  -target string
        path to the Go program (default &quot;.&quot;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now that I had a way to capture my own input and process it, packaging a Go program become a matter of correctly checking if the option arguments were valid file paths (a job for &lt;code&gt;os.Stat()&lt;/code&gt;) and interacting with the command line to build &amp;amp; zip the program. As mentioned above, I didn&#39;t want to be dragged into the rabbit hole of recreating my own zip utility - although it may be an interesting exercise on its own -  and I wanted to continue leveraging the native capabilities of Go. Our friend &lt;code&gt;os/exec&lt;/code&gt; swiftly comes to the rescue here:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;exec.Command(&quot;go&quot;, &quot;build&quot;, &quot;main.go&quot;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In this way, &lt;code&gt;gozip&lt;/code&gt; acts as a terminal wrapper, so I can directly submit commands to the shell and it&#39;s not necessary to rebuild anything from scratch.&lt;/p&gt;&lt;h3 id=&quot;connecting-the-dots&quot;&gt;Connecting the dots&lt;/h3&gt;&lt;p&gt;All the different pieces were ready, so putting them together was straightforward at this point:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/18d2ff8f92b99d1e2a8bf7236475eae7.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;There are potentially many useful extensions that could be made to improve &lt;code&gt;gozip&lt;/code&gt;, like connecting with Docker registries or S3 buckets, adding support for additional languages, and even developing an end-to-end integration with AWS Lambda. For the time being, I am satisfied with what I have, considering that it took a negligible amount of time to develop and will surely prevent a few headaches in the future.&lt;/p&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;In this article, I talked about my issues with AWS Lambda deployments and how I remediated them with a basic CLI that leverages the &lt;code&gt;flag&lt;/code&gt; and &lt;code&gt;os/exec&lt;/code&gt; packages in Golang&#39;s standard library. While additional improvement and extensions would make my utility way more valuable, I feel like I reached a good compromise between increased efficiency and development effort.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Programming my Tello Drone with Arduino and Goodwill</title>
    <link href="https://blog.lorisocchipinti.com/fly-drone-with-led-screen/"/>
    <updated>2022-12-05T23:03:53.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/fly-drone-with-led-screen/</id>
    <content type="html">&lt;p&gt;Among all the impulse purchases of this year, my quadcopter is one I don&#39;t regret at all. In general, I was always fascinated by drones (it&#39;s understandable, they are flying robots after all) and I like programming stuff - so I decided to get the best of both worlds and go buy my own. The market offers a few alternatives, but my ideal drone had to feature the following must-haves:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;it would be programmable in a full-fledged language like C or Python&lt;/li&gt;&lt;li&gt;it would have at least a camera, and maybe also some other sensors, and they should be accessible via some API&lt;/li&gt;&lt;li&gt;it should be compatible with some kind of modular, plug-and-play hardware&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The TelloTalent from DJI matched all the above requirements. What really got me was seeing the flashy LED screen packaged with it and all the cool projects made by the community: there are people controlling the drone with their hand or body movements, developing autonomous flight plans using visual markers, and even repurposing it with random stuff like bar-code scanners. This &lt;a href=&quot;https://github.com/houdinisparks/pose_recognition_tello&quot;&gt;repository&lt;/a&gt; gathers many cool projects from the community and I recommend giving it a look: the possibilities are endless.&lt;/p&gt;&lt;p&gt;On the other hand, I must admit that this drone is in practice a little more than just a fancy toy - which is not inherently bad, of course. It&#39;s clearly targeted for educational purposes only: for starters, forget about flying it outdoors and prepare for an awfully short battery life span. However, it still does an excellent job for its own purpose and, in my opinion, it provides a lot of value.&lt;/p&gt;&lt;h3 id=&quot;components-and-sdk-overview&quot;&gt;Components and SDK overview&lt;/h3&gt;&lt;p&gt;As mentioned above, the Tello Talent comes with a hardware module containing an ESP32 microcontroller, a LED, and a matrix screen. The drone itself can be controlled by connecting via WiFi, or by sending commands to the USB serial port.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-video-card kg-card-hascaption&quot;&gt;&lt;div class=&quot;kg-video-container&quot;&gt;&lt;video src=&quot;https://blog.lorisocchipinti.com/content/media/2022/12/chip-video-1.mp4&quot; poster=&quot;https://img.spacergif.org/v1/1184x800/0a/spacer.png&quot; width=&quot;1184&quot; height=&quot;800&quot; loop=&quot;&quot; autoplay=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot; preload=&quot;metadata&quot; style=&quot;background: transparent url(&#39;https://blog.lorisocchipinti.com/content/images/2022/12/media-thumbnail-ember364.jpg&#39;) 50% 50% / cover no-repeat;&quot;&gt;&lt;/video&gt;&lt;div class=&quot;kg-video-overlay&quot;&gt;&lt;button class=&quot;kg-video-large-play-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path d=&quot;M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/button&gt;&lt;/div&gt;&lt;div class=&quot;kg-video-player-container kg-video-hide&quot;&gt;&lt;div class=&quot;kg-video-player&quot;&gt;&lt;button class=&quot;kg-video-play-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path d=&quot;M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/button&gt;&lt;button class=&quot;kg-video-pause-icon kg-video-hide&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;rect x=&quot;3&quot; y=&quot;1&quot; width=&quot;7&quot; height=&quot;22&quot; rx=&quot;1.5&quot; ry=&quot;1.5&quot;&gt;&lt;/rect&gt;&lt;rect x=&quot;14&quot; y=&quot;1&quot; width=&quot;7&quot; height=&quot;22&quot; rx=&quot;1.5&quot; ry=&quot;1.5&quot;&gt;&lt;/rect&gt;&lt;/svg&gt;&lt;/button&gt;&lt;span class=&quot;kg-video-current-time&quot;&gt;0:00&lt;/span&gt;&lt;div class=&quot;kg-video-time&quot;&gt;/&lt;span class=&quot;kg-video-duration&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;input type=&quot;range&quot; class=&quot;kg-video-seek-slider&quot; max=&quot;100&quot; value=&quot;0&quot; /&gt;&lt;button class=&quot;kg-video-playback-rate&quot;&gt;1&amp;#215;&lt;/button&gt;&lt;button class=&quot;kg-video-unmute-icon&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path d=&quot;M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/button&gt;&lt;button class=&quot;kg-video-mute-icon kg-video-hide&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 24&quot;&gt;&lt;path d=&quot;M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/button&gt;&lt;input type=&quot;range&quot; class=&quot;kg-video-volume-slider&quot; max=&quot;100&quot; value=&quot;100&quot; /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;figcaption&gt;Source: www.dji.com&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;DJI offers an official cockpit app to fly the drone around and capture some images, but nothing prevents you to build your own: in fact, it is possible to interact with the drone thanks to a text-based SDK. An excerpt from the command list is shown below. More info can be found in the official documentation &lt;a href=&quot;https://dl-cdn.ryzerobotics.com/downloads/Tello/Tello%20SDK%202.0%20User%20Guide.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;!--kg-card-begin: markdown--&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;command&lt;/td&gt;
&lt;td&gt;Enters in SDK mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;takeoff&lt;/td&gt;
&lt;td&gt;Auto takeoff&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;land&lt;/td&gt;
&lt;td&gt;Auto landing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;up x&lt;/td&gt;
&lt;td&gt;Ascend to &amp;quot;x&amp;quot; cm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;down x&lt;/td&gt;
&lt;td&gt;Descend to &amp;quot;x&amp;quot; cm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;right x&lt;/td&gt;
&lt;td&gt;Fly right for “x” cm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;left x&lt;/td&gt;
&lt;td&gt;Fly left for “x” cm&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;!--kg-card-end: markdown--&gt;&lt;p&gt;My goal was simple: control the drone from the microcontroller only, from a script that I would develop in C and then flash into the ESP32 ROM memory.&lt;/p&gt;&lt;h3 id=&quot;developing-a-flight-plan&quot;&gt;Developing a flight plan&lt;/h3&gt;&lt;p&gt;Setting up an Arduino IDE to work with the ESP32 was not easy as I thought: the documentation is not clear, the examples are scarce, and unfortunately often from Chinese-speaking contributors. However, after a couple of attempts, I was able to download the correct drivers and make them work in my Arduino IDE. On a brighter note, the &lt;a href=&quot;https://github.com/RoboMaster/RMTT_Libs&quot;&gt;helper packages and examples&lt;/a&gt; from the TelloTalent developers were extremely useful as well since I am not an experienced C programmer - and surely not of the Embedded Systems flavor anyway.&lt;/p&gt;&lt;p&gt;There are two important methods available: &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;loop&lt;/code&gt;. As the names suggest, they are respectively used for the initial drone startup phase and for the main behavior loop. As I wanted to execute a brief 30 seconds routine, I put all my logic into the &lt;code&gt;setup&lt;/code&gt; section. It is also possible to use the &lt;code&gt;setup&lt;/code&gt; function to stay idle and wait for a specific event (e.g. a button is pressed, or a specific command is received), before entering into the main loop. Anyway, I developed a basic flight plan to get started:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/4b9a7ff641d9903162cd9effe95cfd60.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;As can be noted here, the &lt;code&gt;tt_matrix&lt;/code&gt; and &lt;code&gt;tt_sdk&lt;/code&gt; packages are doing the heavy lifting. The &lt;code&gt;tt_sdk&lt;/code&gt; is a straightforward interface that decouples the high-level SDK commands from the serial port connection and data transfer; on the other hand, &lt;code&gt;tt_matrix&lt;/code&gt; deals with low-level operations to access and write to the LED screen registries. Speaking of which, it was due time to tinker with the little lights.&lt;/p&gt;&lt;h3 id=&quot;animating-the-led-screen&quot;&gt;Animating the LED screen&lt;/h3&gt;&lt;p&gt;After creating a flight plan, I wanted to make this project a bit more personal with a custom animation on the drone&#39;s screen. The ESP32 chip on the TelloTalent comes out of the box with an 8x8 LED matrix, which is enough to show a bit of text and render some simple sprites. I decided that my drone would fit perfectly with the theme of aliens and spaceships, and should become a monster from Space Invaders 👾.&lt;/p&gt;&lt;p&gt;Now, the documentation on the TT is not super accessible, but some reverse engineering showed that the screen features two color channels - blue and red. These two channels can be independently set (and mixed) on each cell on the screen, and their luminosity can be configured on 256 different levels of intensity. With this information, I was finally able to sketch my beloved alien monster in two alternating sprites:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/12/alien-invader-1.png&quot; /&gt;
  &lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/12/alien-invader-2.png&quot; /&gt;
&lt;/div&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Finally, I wrote a simple method to animate the UFO:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/28cf692b192ae25bccfa95d1e888c6a4.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;The &lt;code&gt;sprite_a&lt;/code&gt; and &lt;code&gt;sprite_b&lt;/code&gt; are just matrixes with constant values, respectively modeling one of the two alien sprites.&lt;/p&gt;&lt;h3 id=&quot;enabling-parallel-execution&quot;&gt;Enabling parallel execution&lt;/h3&gt;&lt;p&gt;I had a flight plan and a way to animate the sprites on the screen. However, since the &lt;code&gt;move_sprite&lt;/code&gt; method had a blocking infinite loop, it would never allow for the flight plan to execute. How could I instruct my Tello to do both things at once?&lt;/p&gt;&lt;p&gt;Fortunately, the ESP32 microcontroller comes with a set of useful &lt;a href=&quot;https://www.freertos.org/FAQMem.html#StackSize&quot;&gt;RTOS APIs&lt;/a&gt;, such as &lt;code&gt;xTaskCreate&lt;/code&gt; and its multitasking capabilities:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;BaseType_t xTaskCreate(TaskFunction_t pvTaskCode,
                       const char * const pcName,
                       configSTACK_DEPTH_TYPE usStackDepth,
                       void *pvParameters,
                       UBaseType_t uxPriority,
                       TaskHandle_t *pxCreatedTask);&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;xTaskCreate&lt;/code&gt; takes a reference to a function (a new &quot;task&quot;) and adds it to the queue of tasks ready to run: the OS will then manage the concurrent tasks by alternating between them, for example by taking advantage of the time spent waiting for I/O operations.&lt;/p&gt;&lt;p&gt;The most important arguments here are &lt;code&gt;pvTaskCode&lt;/code&gt;, which is the matrix handler function name, and &lt;code&gt;usStackDepth&lt;/code&gt;, the depth of the stack that the target task will need to execute: I admit that I just guessed the appropriate value here after failing a couple of attempts, choosing at the end a multiple of the minimum stack size allowed:&lt;/p&gt;&lt;p&gt;&lt;code&gt;xTaskCreate( move_sprite, &quot;Move Sprite&quot;, configMINIMAL_STACK_SIZE * 2, NULL, tskIDLE_PRIORITY, &amp;amp;xHandle );&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Finally, I could bring everything together in a single script:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/e8c484b2a2ff2493a7315e86acfd3ad0.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;The little UFO was now ready for take-off!&lt;/p&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;Programming my Tello drone to follow a simple flight plan while interacting with its LED screen was a very fun experience, and a way to grow out of my comfort zone: dealing with software near to the &quot;metal&quot; and with real-time constraints, understanding drone stuff and, above all, managing to make sense of scarce and sometimes obscure documentation by virtue of reverse-engineering and translating from Chinese 🤓. &lt;/p&gt;&lt;p&gt;All in all, with a little imagination and goodwill, the Tello can provide a vast source of side-project ideas and unique challenges!&lt;/p&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://dl-cdn.ryzerobotics.com/downloads/Tello/Tello%20SDK%202.0%20User%20Guide.pdf&quot;&gt;Tello SDK User Guide&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/RoboMaster/RMTT_Libs&quot;&gt;TelloTalent Arduino Support Package | github.com&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.freertos.org/a00125.html&quot;&gt;FreeRTOS documentation | xTaskCreate&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>The Beauty of Test Pyramids</title>
    <link href="https://blog.lorisocchipinti.com/test-pyramid/"/>
    <updated>2022-11-28T19:41:10.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/test-pyramid/</id>
    <content type="html">&lt;p&gt;I hate bugs. Please, don&#39;t misunderstand me: I don&#39;t necessarily despise looking into errors and fixing them. In fact, sometimes investigating bugs can be exceptionally rewarding and makes me feel like a hard-boiled detective. No, what I hate is that they break my illusion of being some kind of magician, muttering powerful spells in the shape of lines of code and bending reality to my will. According to my ideal, microservices should harmonically run together, with no hiccups, no breaks, and no dead-letter queues. &lt;/p&gt;&lt;p&gt;This is, of course, a deeply flawed - and quite arrogant - vision. The reality is that software soon loses its heavenly halo in the mud of crappy workarounds, fuzzy requirements, and unmalleable architectures. Its authors are quite certainly imperfect, too. In my programming career, there always was a looming side quest looking for better practices and sophistication that would attenuate the aforementioned shortcomings: one of the most valuable tools I found is the Test Pyramid.&lt;/p&gt;&lt;p&gt;The Test Pyramid is an ancient concept (as ancient as a &lt;a href=&quot;https://books.google.com.ar/books/about/Succeeding_with_Agile.html?id=IdT6AgAAQBAJ&quot;&gt;book written in 2009&lt;/a&gt; can be) but still holds valuable treasures. The Pyramid illustrates what the different types of tests are and which is their relative weight in a codebase. Every half-decent developer what the three types of tests featured are: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;em&gt;&lt;strong&gt;Unit Tests:&lt;/strong&gt;&lt;/em&gt; their purpose is to focus on a single &lt;em&gt;unit&lt;/em&gt; of the codebase, often a single function. They are narrow, straight to the point, and by large the most abundant in a project.&lt;/li&gt;&lt;li&gt;&lt;em&gt;&lt;strong&gt;Integration Tests:&lt;/strong&gt;&lt;/em&gt; how will the application behave when interacting with other systems? These tests target the interfaces between different services, such as a database or an external endpoint.&lt;/li&gt;&lt;li&gt;&lt;em&gt;&lt;strong&gt;End-to-End Tests: &lt;/strong&gt;&lt;/em&gt;finally, it is wise to test an application from the point of view of its user (which is typically a UI, like those offered by mobile and web apps). These automated tests are very slow and traverse the whole tech stack, but will validate the application in a way that is otherwise impossible in a more convenient way than manual QA.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;However, I like working with a slightly different mental model: the Correctness Pyramid. This enhanced version - originally &lt;a href=&quot;https://www.youtube.com/watch?v=SIr7mcnVy98&amp;amp;t=799s&quot;&gt;presented &lt;/a&gt;by Christina Lee during the KotlinConf 2019 - encompasses broader activities and different stakeholders, including end-users. For example, it also takes into account the detail specification phase, PRs, manual QA testing, and - at the very top - even the normal application activity in the Production environment.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/11/image.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;913&quot; height=&quot;678&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/11/image.png 600w, https://blog.lorisocchipinti.com/content/images/2022/11/image.png 913w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;The Correctness Pyramid by Christina Lee&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The message is crystal-clear: the higher you go, the more painful it is to be wrong about something. It could be a misunderstood requirement, an unexplored corner case, or an algorithm that scales poorly: anything that compromises the best functioning of the software and jeopardizes its effectiveness. To see why this is true, let&#39;s make a silly example and consider the worst case possible. &lt;/p&gt;&lt;blockquote&gt;Conezilla is a home delivery app that serves delicious ice-creams to its customer base. To ensure that the product delivered is always of the highest quality and doesn&#39;t melt, any order that takes more than 1 hour automatically expires and the ice-cream cannot be sold anymore. Developers take this predicament to heart and, without thinking too much about the consequences, implement a filter that hides all the expired orders from the UI. However, disgruntled users soon start complaining that they found credit card charges even if they don&#39;t remember ordering anything.&lt;/blockquote&gt;&lt;p&gt;The cost of not being correct is maximum here: not only we had some kind of disruption in the production environment, but now we need to go back to the whiteboard to untangle the mess, redesign a better process, develop the fix, push it through all the different type of test phases necessary and, finally, release it. We would also make sure that the impacted users are aware of the update and willing to use the App again. You really don&#39;t want to be wrong when transitioning to the upper part of the pyramid.&lt;/p&gt;&lt;p&gt;As a consequence, the attentive (and self-interested) developer will devote a reasonable deal of time and focus when designing a new feature. Linters and compilers will also automatically highlight a huge number of trivial errors that nobody wants to carry upwards and figure out only later when performing unit and integration tests. &lt;em&gt;Ça va sans dire&lt;/em&gt;, the software will be written in a way that facilitates testability, flexibility, and decoupling. Good choices made at the foundation of the Pyramid will reap compounding benefits as we travel to the top. «Give me a lever» said Archimedes «and I will move the world». The Correctness Pyramid may give us developers a different type of leverage, but it is still a very powerful one.&lt;/p&gt;&lt;p&gt;What is the actionable insight here? The main takeaway is that the Pyramid nudges us into &lt;em&gt;down-shifting &lt;/em&gt;issues: the earlier I find out I am wrong, the easier and less painful will be to solve the problem. It&#39;s obviously cheaper to verify an assumption when still on the whiteboard than when opening a PR, and it&#39;s way better to write one more test than to improvise as a firefighter in Production. I believe that the majority of best practices in software engineering help us to down-shift problems, and healthy team dynamics will help to stay on track.&lt;/p&gt;&lt;p&gt;In other words, it&#39;s best to squish bugs even before they are born. Why? Less work, fewer emergencies, satisfied customers, and happier business owners. Additionally, I can continue to be lulled in my reassuring illusions about perfect and harmonic software.&lt;/p&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=SIr7mcnVy98&amp;amp;t=799s&quot;&gt;Christina Lee&#39;s speech at KotlinConf 2019&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://books.google.com.ar/books/about/Succeeding_with_Agile.html?id=IdT6AgAAQBAJ&quot;&gt;Succeeding with Agile, by Mike Cohn&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>The Swap file Trick</title>
    <link href="https://blog.lorisocchipinti.com/the-swap-file-trick/"/>
    <updated>2022-11-21T08:00:06.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/the-swap-file-trick/</id>
    <content type="html">&lt;p&gt;«Hey, look at what I made! » I said triumphantly, addressing a friend of mine «It&#39;s online. Just open the link!». I was so proud of my work. After a couple evenings of frantic work, I finally put together my small project and I was ready to show it to the world.&lt;/p&gt;&lt;p&gt;«But I don&#39;t see anything!» my first user replied, revealing a hint of skepticism «Screen&#39;s blank». I was appalled. I felt betrayed and frail. My amazing personal website was already down after just a few hours and I hadn&#39;t any idea why. It was a situation that I couldn&#39;t tolerate.&lt;/p&gt;&lt;p&gt;The page you are reading from is being served by &lt;a href=&quot;https://ghost.org/&quot;&gt;Ghost&lt;/a&gt;, an open-source content-creation platform. I wanted to go for a self-hosted solution, so I instantiated a tiny EC2 instance with only 1GB of RAM (yes, it is included in the AWS Free Tier and yes, I am a cheapskate) and set up my blog on it. I published some posts, picked a nice picture of myself under the Tour Eiffel, and prepared to dominate the blogging scene. Little did I know, that my little website would go down in a couple of hours.&lt;/p&gt;&lt;h3 id=&quot;ghost-hunting&quot;&gt;Ghost hunting&lt;/h3&gt;&lt;p&gt;In the heat of the moment, I restarted the EC2 instance and in no time I was able to show off my website to my friends again. However, the issue proved to be an especially sticky one: just like a mischievous poltergeist, something was messing around in my (virtual) home and causing troubles every few hours. But who was the culprit? Of course, traffic spikes were out of consideration: no one knew about this website and the page was not indexed yet. According to the AWS console, the CPU usage seemed pretty steady and I had a cushy credit balance as well. The most reasonable conclusion at this point was that Ghost was running out of RAM for some reason.&lt;/p&gt;&lt;p&gt;After searching around in many blog posts and user groups, I found something interesting. Some users noticed that Ghost could run on 1GB RAM but, from time to time, it would choke itself to death. The reason it&#39;s still unclear (someone blames a NodeJS memory leak, picture me surprised). On my part, I had no intention of changing the instance type to buff its specs and wasn&#39;t particularly inclined to dig deeper into the issue.&lt;/p&gt;&lt;p&gt;At once, an intuition came to my mind. I stormed to the EC2 console and I confirmed my hunch: I had only 1GB of memory, but I was sitting on 8GB SSD. «Well» I thought «Probably the default &lt;em&gt;swap &lt;/em&gt;partition is simply too small. Let&#39;s see»&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ free -m
               total        used        free
Mem:             941         870          71&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That&#39;s right. Maybe unsurprisingly to the tech-savvy reader, no &lt;em&gt;swap &lt;/em&gt;partition was defined at all in the virtual machine. Having gathered this piece of information, the resolution was at my fingertips. &lt;/p&gt;&lt;h3 id=&quot;fantastic-bits-and-where-to-find-them&quot;&gt;Fantastic bits and where to find them&lt;/h3&gt;&lt;p&gt;First of all, I would create a &lt;em&gt;swapfile &lt;/em&gt;with the &lt;code&gt;dd&lt;/code&gt; command (also friendly referenced as the &lt;code&gt;data destroyer&lt;/code&gt;):&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;sudo dd if=/dev/zero of=/swapfile bs=128M count=8&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;By choosing 8 blocks of 128MB of size each, I would have at this point 1GB extra memory at my disposal. At this point, let&#39;s set appropriate read and write permissions for the &lt;em&gt;swapfile:&lt;/em&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;$ sudo chmod 600 /swapfile&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It is necessary to tell Linux to create a swap area as well:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;$ sudo mkswap /swapfile&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Finally, I could enable the &lt;em&gt;swapfile:&lt;/em&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;$ sudo swapon /swapfile&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After running these commands, I felt alive with so much memory in my VM:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ free -m               
               total        used        free
Mem:             941         411         530
Swap:           1023         491         532&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Obviously, I wanted my instance to remember my decision to create and use a swap file on start-up. To instruct it on doing so, it is necessary to add the following line in the &lt;code&gt;/etc/fstab&lt;/code&gt; file:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;# /etc/fstab
/swapfile swap swap defaults 0 0&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Someone could say that relying on a swap file is just a cheap workaround. To me, it is more of a real-life cheat code.&lt;/p&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://askubuntu.com/questions/508870/what-is-a-swap-area&quot;&gt;What is a &quot;Swap Area&quot;?&lt;/a&gt; An excellent thread about the topic on askubuntu.com&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/premiumsupport/knowledge-center/ec2-memory-swap-file/&quot;&gt;How do I allocate memory to work as swap space in EC2&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Building a Simple Forex App with AWS Lambda and Telegram Bots</title>
    <link href="https://blog.lorisocchipinti.com/forex-bot-with-lambda-telegram/"/>
    <updated>2023-04-16T15:15:35.000+02:00</updated>
    <id>https://blog.lorisocchipinti.com/forex-bot-with-lambda-telegram/</id>
    <content type="html">&lt;p&gt;If you work as a freelancer in the digital economy, it is likely that you have a global perspective when looking for new prospects and collaborators. A huge, worldwide pool of potential clients and opportunities is available to you. For this reason, it&#39;s not uncommon for Designers, Marketing Specialists, Web Developers, or Sales Reps to work with business partners which are based in different countries. &lt;/p&gt;&lt;p&gt;Sometimes, a client may be willing to pay you in its local currency only. Of course, this is a slight inconvenience but, after all, setting up a multicurrency account is usually easy and inexpensive, so it might be best to accept the arrangement and plan to convert the money later.&lt;/p&gt;&lt;h3 id=&quot;the-problem&quot;&gt;The problem&lt;/h3&gt;&lt;p&gt;This was precisely the situation I was in just a few months ago: I was doing the work, I invoiced monthly, and I was being paid. Nothing to write home about. However, after a few iterations, I started noticing some issues with this approach. Obviously, from time to time I needed to convert small amounts of money to my local currency to buy stuff, and doing so at an advantageous rate wasn&#39;t trivial:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;it wasn&#39;t wise to just do the conversion whenever I needed the cash and without looking at the current rates: currency pairs like &lt;code&gt;USD/EUR&lt;/code&gt; or &lt;code&gt;USD/GBP&lt;/code&gt; fluctuate a lot, and a difference of just a few &lt;em&gt;price-interest points&lt;/em&gt; (aka &lt;a href=&quot;https://www.investopedia.com/terms/p/pip.asp&quot;&gt;Pips&lt;/a&gt;) can lead to very different outcomes for your bank account. Why leave money on the table?&lt;/li&gt;&lt;li&gt;converting currencies always comes at a cost: variable fees, spreads, and platform subscriptions. It doesn&#39;t matter how, a broker always finds a way to take its cut.&lt;/li&gt;&lt;li&gt;for fiscal purposes, the only rate that mattered was the one being used when I created the invoice. However, after I got paid and wanted to transfer the money a few days later, the market was already operating at a totally different rate. Unfortunately, the Tax Man didn&#39;t care if in the past 2 years the economy has been a crazy rollercoaster and historically strong currencies were plummeting - he just wanted his money.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As you can see, many different variables were at work here, mostly against me. I didn&#39;t like it. «Damn!» I thought «I am an engineer, I will find a solution if there is any chance to make some beer money!»&lt;/p&gt;&lt;h3 id=&quot;the-solution&quot;&gt;The solution&lt;/h3&gt;&lt;figure class=&quot;kg-card kg-image-card&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/11/midwit_template_forex.jpg&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;1600&quot; height=&quot;900&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/11/midwit_template_forex.jpg 600w, https://blog.lorisocchipinti.com/content/images/size/w1000/2022/11/midwit_template_forex.jpg 1000w, https://blog.lorisocchipinti.com/content/images/2022/11/midwit_template_forex.jpg 1600w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;/figure&gt;&lt;p&gt;Well, how to turn the tables in my favor? Let&#39;s start with a couple of assumptions. The harsh reality is that Forex Trading is complex and risky. I could have poured hundreds of hours into it to educate myself, attempting to come up with bright strategies to gain an edge against the market. However, this approach requires lots of time and money, it&#39;s incredibly difficult to pull off as a retail investor, and it simply wouldn&#39;t play to my strengths. I concluded that I would just adhere to a naive price-based strategy: buy low, sell high.&lt;/p&gt;&lt;p&gt;In the second place, I needed a way to constantly monitor the current rate and act on it whenever it became convenient to convert my money. Initially, I used to visit websites like TradingView to browse the currency pairs rates. As a lowly human, however, I quickly grew tired of such a repetitive and boring task: in fact, I realized, a bot would be much happier to do this kind of work!&lt;/p&gt;&lt;h3 id=&quot;the-bot&quot;&gt;The bot&lt;/h3&gt;&lt;p&gt;The strategy was simple: sending a notification every 2 hours with the current rate and the potential gain or loss I could make at that point in time. The most critical part was getting correct, timely data about exchanges: there are myriads of APIs that can help with this, I just chose the path of least resistance and implemented APILayer&#39;s &lt;a href=&quot;https://apilayer.com/marketplace/exchangerates_data-api&quot;&gt;Exchange Rates Data API&lt;/a&gt; because it&#39;s free and simple but honestly, any API would work just fine. My &lt;code&gt;fetchRate&lt;/code&gt; function would be something like this:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/925041d0f77028a7addaeb2718d2abec.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;where obviously the &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; arguments represent any currency pair I am interested in. As soon as I have the current rate, computing the &lt;a href=&quot;https://www.investopedia.com/terms/p/pip.asp&quot;&gt;pips&lt;/a&gt; difference from my average price is trivial.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/779bded82747db0fc4ea5b9543ed018e.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Finally, I just needed a way to send a message to myself with this juicy info. Again, there is no need to complicate things: Telegram API can serve this purpose very well and is very simple to set up. After interceding with the &lt;a href=&quot;https://t.me/botfather&quot;&gt;@BotFather&lt;/a&gt; to request a personal bot-friend, I was ready to get loose with the messages:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/9e311724fc241efc3e7bc452d7fd1224.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;h3 id=&quot;deploying-on-lambda&quot;&gt;Deploying on Lambda&lt;/h3&gt;&lt;p&gt;Having a personal Forex bot is very useful only if it is always up and running. AWS Lambda is a virtually free solution to host a simple program like mine (or even small microservice architectures), so I refactored my code to run as a serverless function. There are a few ugly parts though, like the fact some features are not supported for Golang and it&#39;s necessary to create a zip archive to upload the files (eww). &lt;/p&gt;&lt;p&gt;However, Lambda functions allow for a lot of flexibility and can be triggered by cronjob tasks, SQS messages, or even API calls. For my use case, I decided to set up a bihourly cronjob and added a simple JSON payload to specify some input variables&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/32ac3c273c8e914dcdc8d17106e7b45b.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Let the money flow in! 💸💸💸&lt;/p&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Ipanov7/forex-bot&quot;&gt;forex-bot repo on github.com&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.investopedia.com/terms/p/pip.asp&quot;&gt;What Are Pips in Forex Trading and What Is Their Value?&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/lambda/latest/dg/lambda-golang.html&quot;&gt;AWS Lambda documentation for Go&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://core.telegram.org/bots&quot;&gt;How to set up a Telegram Bot&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://apilayer.com/marketplace/exchangerates_data-api&quot;&gt;Exchange Rates Data API&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>A Perspective on the Future of Software Engineering</title>
    <link href="https://blog.lorisocchipinti.com/software-engineering-doom-a-personal-thought/"/>
    <updated>2022-11-06T13:52:40.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/software-engineering-doom-a-personal-thought/</id>
    <content type="html">&lt;p&gt;Mass&lt;a href=&quot;https://techcrunch.com/2022/11/03/stripe-cuts-14-of-its-workforce-ceo-says-they-overhired-for-the-world-were-in/?guccounter=1&amp;amp;guce_referrer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8&amp;amp;guce_referrer_sig=AQAAABESQcxFwNES8BYuv3P03ZcAn-gnSzMX88rI6MyMh7PWYqJ9PMXyTB-v9w2O4dNeZGFm0mDnch0PTqlMqGBr581VGxrqf32vhOsUQ91QCPRRFdd3Ox3MUZ_KNApvzvnAHjDrph0fjHG2RFKfflqaiw10MCFIvD4nJIbD4tZAlop4&quot;&gt; layoffs at Stripe&lt;/a&gt; and other fintechs. Elon Musk progressing towards his villain arc at Twitter. Bullish companies like Meta and Amazon &lt;a href=&quot;https://www.aboutamazon.com/news/workplace/a-note-about-hiring-from-beth-galetti&quot;&gt;announcing hiring freezes&lt;/a&gt; throughout this year. Now, do you also feel this sense of impending doom?&lt;/p&gt;&lt;figure class=&quot;kg-card kg-embed-card&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Regarding Twitter’s reduction in force, unfortunately there is no choice when the company is losing over $4M/day.&lt;br /&gt;&lt;br /&gt;Everyone exited was offered 3 months of severance, which is 50% more than legally required.&lt;/p&gt;&amp;mdash; Elon Musk (@elonmusk) &lt;a href=&quot;https://twitter.com/elonmusk/status/1588671155766194176?ref_src=twsrc%5Etfw&quot;&gt;November 4, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/figure&gt;&lt;p&gt;As software engineers, we may have sinned of hubris in the last decade. Our industry experienced an unparalleled boom, spreading throughout all corners of our lives. We felt invincible as we navigated the Covid outbreak sitting in our homes and seeing the demand for our skills skyrocketing. Even Putin&#39;s war allowed for an &lt;a href=&quot;https://www-kommersant-ru.translate.goog/doc/5238127?_x_tr_sl=auto&amp;amp;_x_tr_tl=it&amp;amp;_x_tr_hl=it&amp;amp;_x_tr_pto=wapp&quot;&gt;armistice with software professionals&lt;/a&gt;. But it seems that the tides are turning lately.&lt;/p&gt;&lt;p&gt;As stated in a stern letter from Amazon&#39;s management, we are experiencing &quot;an unusual macro-economic environment&quot;: the pandemic, supply-chain distruptions, double-digit inflation, the war in Europe, and all that jazz. The picture doesn&#39;t look rosy and it will probably get worse before getting better. After all, this is a wake-up call screaming that we are in the same boat as everybody else.&lt;/p&gt;&lt;h3 id=&quot;short-term-vs-long-term-cycles&quot;&gt;Short-Term vs Long-Term cycles&lt;/h3&gt;&lt;p&gt;However, I feel that the current trend will be a rather short-term one. Sure, it may last for a few years, but I don&#39;t feel it will make a huge difference in our careers anyway, at least compared to the global trend in the next decades. Simply put, there is still a vital, burning need for IT professionals in today&#39;s society. For example, we aren&#39;t yet at the point where software has been disseminated in all the objects, businesses, places, edges, and corners of our world. There is a lot of buzz about AI, VR, blockchain, IoT, quantum computing, and other hot tech trends, but we are still a couple decades away from reaping their full potential.&lt;/p&gt;&lt;p&gt;Moreover, today there are billions of people that do not live in fully industrialized countries in Africa and Asia. While it&#39;s true that in terms of sheer scale there is no need to invent another Google or Amazon, it&#39;s easy to guess that this huge amount of people and cultures actively participating in the global economy will bring in a flock of new needs and business models. There is still a lot of work to do for software nerds and we will have a chance to bounce back.&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;On the other hand, if we shift our perspective toward the next two or three decades in the future, it is likely that the scenario will dramatically change. It&#39;s easy to imagine that the IT industry will be much more consolidated by then: there won&#39;t a lot of cool new start-ups pushing new products and the incumbents will have many years to strengthen their monopolistic positions. This means that fewer engineers will be needed in general, and they will mainly work on maintaining old systems. It is possible that highly skilled professionals will be fairly compensated, but what about new blood? They may face ruthless competition and slim paychecks, as new lawyers and civil engineers do nowadays.&lt;/p&gt;&lt;p&gt;One shouldn&#39;t underestimate the impact of AI as well. Content creators and artists are already wary of tools that can generate images from text at a fraction of the cost of their services, and for good reason. By mixing artificial intelligence and low-code tools, everyone will be able to create simple scripts and automation tools. I believe that programming will exist forever in one form or the other and will become truly ubiquitous in the future, it will be more democratized and accessible, and people in every path of life will be able to create software to their benefit. Don&#39;t misunderstand me, this scenario will be great for humanity in general: it&#39;s just that specialized software engineers will become a thing of the past.&lt;/p&gt;&lt;h3 id=&quot;closing-thoughts&quot;&gt;Closing thoughts&lt;/h3&gt;&lt;p&gt;To me, it&#39;s difficult to think that highly competent engineers at Twitter or Stripe will have a hard time bouncing back and finding new well-paid jobs. As an industry, we may have many other fruitful, exciting years in front of us and good employment prospects until our retirement. That said, I wouldn&#39;t expect our grandchildren to follow in our steps, or even understand what we did for a living in our productive years. Although, that may be for the best.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Publish Your First Package With Gradle and GitLab</title>
    <link href="https://blog.lorisocchipinti.com/publish-your-first-package-with-gradle-and-gitlab/"/>
    <updated>2022-11-02T17:20:58.000+01:00</updated>
    <id>https://blog.lorisocchipinti.com/publish-your-first-package-with-gradle-and-gitlab/</id>
    <content type="html">&lt;p&gt;We are approaching the holiday season and, if you somehow celebrate, you will likely have to think thoroughly about this year’s round of gifts and how to delight family and friends. I admit, I sometimes feel that consumerism has spoiled a little the innocence of the gifting ritual. At the very least, I feel that I should personally wrap my gift boxes to give them a personal touch and earn back the joy of donating something.&lt;/p&gt;&lt;p&gt;If we can take care of the physical envelopes of our gifts, why not learn how to do the same with marvelous software packages to share with our team? After all, it is renowned that we should maximize code reuse to speed up development and, most importantly, to make our coworkers&#39; life easier.&lt;/p&gt;&lt;p&gt;If your team collaborates on GitLab and is keen on building Gradle projects, this is the time of learning the respectable craft of package publishing.&lt;/p&gt;&lt;h3 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h3&gt;&lt;p&gt;Before committing to our box-wrapping task, please make sure that you have all the required materials on hand:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Gradle v7.2.0+ (if you are on v6 you can still follow along, just look out for specific notes)&lt;/li&gt;&lt;li&gt;Maintainer access to a GitLab project or group&lt;/li&gt;&lt;li&gt;A fantastic API library to share with your team&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;set-up-a-project&quot;&gt;Set up a project&lt;/h3&gt;&lt;p&gt;If you already have a clear idea of which project to put in your package, just skip this section and go on to choose some fancy ribbon.&lt;/p&gt;&lt;p&gt;However, if you are starting from scratch, navigate to a new directory and submit the command &lt;code&gt;gradle init&lt;/code&gt; into your command line of preference. Then, when prompted for a project type, select &lt;code&gt;3. library&lt;/code&gt;. Complete the initial configuration with the settings that best apply to the project. For this guide, I generated a library in the &lt;code&gt;Kotlin&lt;/code&gt; language with a &lt;code&gt;Groovy DSL&lt;/code&gt; build script (and yes, it is on GitLab and you can browse it &lt;a href=&quot;https://gitlab.com/loris.occhipinti2/kotlin-library-tutorial&quot; rel=&quot;noopener ugc nofollow&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;&lt;p&gt;Finally, you may also want to set up a new GitLab project to host the library source code and its package artifacts.&lt;/p&gt;&lt;h3 id=&quot;authenticate-to-the-package-repository&quot;&gt;Authenticate to the Package Repository&lt;/h3&gt;&lt;p&gt;When it comes to publishing private packages, GitLab allows for a few different authorization methods:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;personal access token&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;deploy token&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;CI_JOB_TOKEN&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A &lt;code&gt;personal access token&lt;/code&gt; is linked to a specific account, so you probably shouldn’t share it with your team. On the other hand, a &lt;code&gt;CI_JOB_TOKEN&lt;/code&gt; is generally used in CI/CD pipelines, so you may not be interested in them just yet since we will publish our library manually in this article.&lt;/p&gt;&lt;p&gt;For our use case, a &lt;code&gt;deploy token&lt;/code&gt; seems like the best option. To generate a token, navigate to the desired GitLab group or project (the maintainer role is required), then browse &lt;code&gt;Settings&amp;gt;Repository&lt;/code&gt; and expand the &lt;code&gt;Deploy Tokens&lt;/code&gt; section. Choose a name, expiry date (optional), and username (optional) for the token and assign &lt;code&gt;read_package_registry&lt;/code&gt;, &lt;code&gt;write_package_registry&lt;/code&gt; scopes.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/10/gitlab-token.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;720&quot; height=&quot;544&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/10/gitlab-token.png 600w, https://blog.lorisocchipinti.com/content/images/2022/10/gitlab-token.png 720w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;Make sure you assign the correct scopes when creating your token&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Finally, push the satisfying &lt;code&gt;Create deploy token&lt;/code&gt;&lt;em&gt; &lt;/em&gt;blue button and store the result safely, as the newly generated token can not be accessed again.&lt;/p&gt;&lt;p&gt;Now you can connect your library to the Package Repository. Simply add a &lt;code&gt;publishing&lt;/code&gt; section in the &lt;code&gt;build.gradle&lt;/code&gt; script and enable the &lt;code&gt;publishing&lt;/code&gt; plugin.&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/d0fd5fb3ec410667408dd7e28c360696.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Don’t forget to enable the publish plugin:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/820d1447769b739e2ec164dfd843c744.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Replace the &lt;code&gt;PROJECT_ID&lt;/code&gt; placeholder with the project ID as shown in the GitLab repository, under the project name.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/10/gitlab-project-name.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;717&quot; height=&quot;171&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/10/gitlab-project-name.png 600w, https://blog.lorisocchipinti.com/content/images/2022/10/gitlab-project-name.png 717w&quot; /&gt;&lt;/figure&gt;&lt;hr /&gt;&lt;h3 id=&quot;a-note-about-earlier-gradle-versions&quot;&gt;A note about earlier Gradle versions&lt;/h3&gt;&lt;p&gt;The layout for the &lt;code&gt;publishing&lt;/code&gt; section was slightly different in earlier versions of Gradle, as shown in the code snippet below:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/a9e71cdde56e6211ad67619019fb5e02.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;h3 id=&quot;publish&quot;&gt;Publish&lt;/h3&gt;&lt;p&gt;Run the task &lt;code&gt;gradle publish&lt;/code&gt;. The packaged libraries can be browsed in the &lt;code&gt;Packages &amp;amp; Registries&lt;/code&gt; page of the selected project and can be now downloaded by external projects.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/10/package-registry.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;984&quot; height=&quot;366&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/10/package-registry.png 600w, https://blog.lorisocchipinti.com/content/images/2022/10/package-registry.png 984w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;The project’s Package Registry featuring multiple versions&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Remember to properly update the &lt;code&gt;version&lt;/code&gt; field in the &lt;code&gt;build.gradle&lt;/code&gt; file to keep track of all your changes.&lt;/p&gt;&lt;h3 id=&quot;import-a-package&quot;&gt;Import a Package&lt;/h3&gt;&lt;p&gt;A published Packaged can be imported as a dependency into a project. However, it is necessary to update the repository section in the &lt;code&gt;build.gradle&lt;/code&gt; for the project that relies on the dependency:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/18b366794aac9c2e6b23e4f4954bb8ca.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;To import the library update the project dependencies:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/94fd0687aa00a90bcfa31bd300d53aa7.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;&lt;p&gt;I hope that you enjoyed dirtying your hands with colorful wrapping papers and flashy bows.&lt;/p&gt;&lt;p&gt;Just remember: of course it’s the thought that counts but please keep any squishy bug out of your package!&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1513054222571-9bcc38c2d6ed?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=max&amp;amp;fm=jpg&amp;amp;ixid=MnwxMTc3M3wwfDF8c2VhcmNofDc5fHxnaWZ0JTIwcGFja2FnZXxlbnwwfHx8fDE2NjczOTY2MTU&amp;amp;ixlib=rb-4.0.3&amp;amp;q=80&amp;amp;w=2000&quot; class=&quot;kg-image&quot; alt=&quot;CHRISTMAS&quot; loading=&quot;lazy&quot; width=&quot;5565&quot; height=&quot;3710&quot; srcset=&quot;https://images.unsplash.com/photo-1513054222571-9bcc38c2d6ed?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=max&amp;amp;fm=jpg&amp;amp;ixid=MnwxMTc3M3wwfDF8c2VhcmNofDc5fHxnaWZ0JTIwcGFja2FnZXxlbnwwfHx8fDE2NjczOTY2MTU&amp;amp;ixlib=rb-4.0.3&amp;amp;q=80&amp;amp;w=600 600w, https://images.unsplash.com/photo-1513054222571-9bcc38c2d6ed?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=max&amp;amp;fm=jpg&amp;amp;ixid=MnwxMTc3M3wwfDF8c2VhcmNofDc5fHxnaWZ0JTIwcGFja2FnZXxlbnwwfHx8fDE2NjczOTY2MTU&amp;amp;ixlib=rb-4.0.3&amp;amp;q=80&amp;amp;w=1000 1000w, https://images.unsplash.com/photo-1513054222571-9bcc38c2d6ed?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=max&amp;amp;fm=jpg&amp;amp;ixid=MnwxMTc3M3wwfDF8c2VhcmNofDc5fHxnaWZ0JTIwcGFja2FnZXxlbnwwfHx8fDE2NjczOTY2MTU&amp;amp;ixlib=rb-4.0.3&amp;amp;q=80&amp;amp;w=1600 1600w, https://images.unsplash.com/photo-1513054222571-9bcc38c2d6ed?crop=entropy&amp;amp;cs=tinysrgb&amp;amp;fit=max&amp;amp;fm=jpg&amp;amp;ixid=MnwxMTc3M3wwfDF8c2VhcmNofDc5fHxnaWZ0JTIwcGFja2FnZXxlbnwwfHx8fDE2NjczOTY2MTU&amp;amp;ixlib=rb-4.0.3&amp;amp;q=80&amp;amp;w=2400 2400w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@iamchang?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit&quot;&gt;Chang Duong&lt;/a&gt; / &lt;a href=&quot;https://unsplash.com/?utm_source=ghost&amp;utm_medium=referral&amp;utm_campaign=api-credit&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/10/gift-conclusion.jpg&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;720&quot; height=&quot;480&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/10/gift-conclusion.jpg 600w, https://blog.lorisocchipinti.com/content/images/2022/10/gift-conclusion.jpg 720w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@iamchang?utm_source=medium&amp;amp;utm_medium=referral&quot; rel=&quot;noopener ugc nofollow&quot;&gt;Chang Duong&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&quot; rel=&quot;noopener ugc nofollow&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;GitLab repository: &lt;a href=&quot;https://gitlab.com/loris.occhipinti2/kotlin-library-tutorial&quot; rel=&quot;noopener ugc nofollow&quot;&gt;https://gitlab.com/loris.occhipinti2/kotlin-library-tutorial&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Official docs: &lt;a href=&quot;https://docs.gitlab.com/ee/user/packages/maven_repository/index.html&quot; rel=&quot;noopener ugc nofollow&quot;&gt;https://docs.gitlab.com/ee/user/packages/maven_repository/index.html&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Designing a distributed AgTech application with IPFS</title>
    <link href="https://blog.lorisocchipinti.com/designing-a-distributed-agtech-application-with-ipfs/"/>
    <updated>2022-10-29T17:59:07.000+02:00</updated>
    <id>https://blog.lorisocchipinti.com/designing-a-distributed-agtech-application-with-ipfs/</id>
    <content type="html">&lt;p&gt;While building Smart Contracts I realized how some trivial decisions in the context of centralized programming can rapidly become a first-class concern. For instance, where should I store my files so that any involved party can see them and verify their integrity? How to make sure no one can withhold an important document I am interested in? In the past, I tried to avoid the need of reference files altogether, or to store just a hash on the ledger and confide in the kinship among the network participants. These approaches proved to be clearly unsatisfactory, so I finally decided to explore new technologies and put an end to my dismay.&lt;/p&gt;&lt;h3 id=&quot;introducing-ipfs&quot;&gt;Introducing IPFS&lt;/h3&gt;&lt;p&gt;I was in this state of mind when I started dabbling with IPFS and I realized it has lots of potential. So what is IPFS, and how can it help? First of all, IPFS’ quirky full name is Inter-Planetary File System. It is an open-source, peer-to-peer file storage technology that aspires to dethrone HTTP for the Distributed Web. IPFS is essentially a network of cooperating peer nodes that share the &lt;em&gt;ownership &lt;/em&gt;of the data uploaded, so that any file can be distributed to any node and later made conveniently accessible to the world, no matter what happens to the original author. On IPFS, a central role is played by the file CID, an unique identifier that allows to recognize and query any content, which incidentally is made from the file’s hash so it serves as an integrity check as well.&lt;/p&gt;&lt;p&gt;In the first place, I stormed the quick start tutorial, ran a IPFS node via the docker image and started querying it by using its HTTPS APIs. Now, every node comes with a useful tutorial directory, that can be explored like a regular UNIX directory by submitting a POST request to the &lt;em&gt;/api/v0/lis&lt;/em&gt;t endpoint (please note: you have to set the query parameter &lt;em&gt;arg&lt;/em&gt; to the desired CID. For the quick-start directory it will be &lt;code&gt;QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG&lt;/code&gt;). The result of the operation is the following:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/ec512b56f1a0ae9bf339bf93be45f03c.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Each link represents the unique identifier of some content stored on the IPFS. The type attribute represents directories with a value of &lt;em&gt;1 &lt;/em&gt;and uses &lt;em&gt;2&lt;/em&gt; for files. As a consequence, if we try to list a file we won’t find any inner link referred, as expected:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/49ad8d6f9a27c2998d4fb4acd08a59b8.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;h2 id=&quot;the-rise-of-decentralized-machines&quot;&gt;The Rise of (Decentralized) Machines&lt;/h2&gt;&lt;p&gt;Once satisfied with my achievements, I decided it was time to level up my learning curve by starting a simple project.&lt;/p&gt;&lt;p&gt;However, finding an appropriate IPFS idea was a big first-world problem for me. I currently focus on writing microservices in Kotlin with SpringBoot, the kind of centralized pattern that gets a bad rap in the galaxy of Web3 and thick JS clients. People today have access to extremely versatile and powerful devices, it’s not reasonable to delegate to obscure third-party servers what can be done on a smartphone. Still, this is not true for the entirety of agents that could operate in the DWeb: a UI provided by a browser or a mobile app to us humans is not really useful to cold machines.&lt;/p&gt;&lt;p&gt;This may sound strange to some of you, but a sentence I once read stuck with me:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;“The best UX is to have no UI at all&lt;/strong&gt;”&lt;/p&gt;&lt;p&gt;This makes totally sense when thinking it thoroughly. A lot of business processes and operations are automated today, and the fundamental purpose of automation is to create value without the intervention of a real person. As any manager could confirm, the best employee is the one which self-manages. Likewise, a process correctly automated would not require an human interaction, excluding critical decision points and when bugs arise (rarely, we all hope).&lt;/p&gt;&lt;p&gt;What kind of application might that be?&lt;/p&gt;&lt;h3 id=&quot;soil-crops-and-sensors&quot;&gt;Soil, Crops and Sensors&lt;/h3&gt;&lt;p&gt;Let’s imagine our users are farmers in a certain area, collecting granular weather data, information on water consumption or fertilizers productivity. The data could be uploaded on IPFS, relevant participants can be notified of the event and browse the reports without relying on any given third party. On top of that, IPFS offers innate de-duplication which is super helpful for typical sensor data (a more detailed explanation can be found in this &lt;a href=&quot;http://blog.klaehn.org/2018/06/10/efficient-telemetry-storage-on-ipfs/&quot; rel=&quot;noopener ugc nofollow&quot;&gt;article&lt;/a&gt;) and thrives on struggling networks and the minimal sensor-ware the farmers may have in their availability.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/10/farmers.jpeg&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;720&quot; height=&quot;685&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/10/farmers.jpeg 600w, https://blog.lorisocchipinti.com/content/images/2022/10/farmers.jpeg 720w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;/figure&gt;&lt;p&gt;This becomes even better, as anyone can now offer new on-top services: for instance, the farmers could collectively pay a fee to a provider on Ethereum to run previsions on the weather data, forecast water scarcity and plan activities.&lt;/p&gt;&lt;p&gt;The provider’s application would then need to download the raw sensor data, make sense of it and share a sensible forecast back on IPFS, so that the farmers can act on the new derived knowledge.&lt;/p&gt;&lt;h3 id=&quot;drafting-a-quick-solution&quot;&gt;Drafting a Quick Solution&lt;/h3&gt;&lt;p&gt;Let’s draft a short list of necessary MVP features for our users:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;upload sensor data on IPFS&lt;/li&gt;&lt;li&gt;ask to a Provider to start analyzing data in a certain time interval&lt;/li&gt;&lt;li&gt;privately upload some data to share it with certain users&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;The first point can be achieved easily with IPFS APIs. However, I was initially tempted to put all of the user data in a directory, store the CID, and later list and download the files in it. This looks viable by just playing with /ls and /cat APIs. Naively, I instinctively thought “&lt;em&gt;Great! Users will create as many directories they wish, they will add files, remove them, all with native IPFS! I will finish my prototype in no time!&lt;/em&gt;”.&lt;/p&gt;&lt;p&gt;However, navigating the IPFS in this way is misleading. It can’t behave as a UNIX-like filesystem, because it is immutable. As it is possible to read on the documentation, each file hash is calculated from its own content and likewise, each directory’s hash is calculated from its entries hashes in a bottom up fashion. Let’s imagine we need to add a directory to IPFS with the following basic structure:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;foo/
├── bar
│  └── baz
└── baz&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can then submit it to IPFS by running &lt;code&gt;$ ipfs add -r foo&lt;/code&gt;:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/9aa6dc532406aa504750892ffabecd6d.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Did you notice that entries are logged from the innermost element? It’s no coincidence, that is the necessary order IPFS uses to create those entries.&lt;/p&gt;&lt;p&gt;The logical conclusion of this mechanism is that it’s not possible to change the directory entries because this would invalidate the previous CID calculation and generate a new hash. Essentially, we would have a brand new directory. This innate versioning system is a nice side effect in IPFS when trying to prevent file tampering. Although, it creates some issues in making sense of your files and organizing them according to domain specific groupings. Not a problem, this just means that our high-tech farmers will rely on a different mechanism. Two alternatives come to mind:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;using IPNS: a name resolution system based on IPFS. It makes possible to create a named reference of a IPFS directory to a certain key and later edit its content&lt;/li&gt;&lt;li&gt;just creating an index of the contents and store it on a DB&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I felt that the first approach was unnecessary for my purposes and also a little cumbersome, especially as users are going to generate a large, uninterrupted stream of raw data over time. It would be in theory possible to store the index on some kind distributed DB or even in a blockchain, but since the index is mainly a utility tool intended for private use, I chose to store it on some good old local storage tech.&lt;/p&gt;&lt;p&gt;In the second place, a Provider should be somehow notified about the analysis task and receive an indexed list of files to analyze. Matching farmers and data specialists should not be an especially difficult task and could happen both on a decentralized or a traditional platform: so I just assumed that, after being chosen, the service provider receives a list of CID blocks containing time-series data via a REST API.&lt;/p&gt;&lt;p&gt;Lastly, the data analysis performed is probably of some value and was paid for, hence it is considerate to treat it as a reserved matter: the provider can just encrypt the insights with a farmer’s public key received in the previous step and upload it back to the IPFS. As a consequence, it would be possible to preserve data privacy while preserving accessibility by adding a simple security layer to IPFS.&lt;/p&gt;&lt;h3 id=&quot;it-ain%E2%80%99t-much-but-it%E2%80%99s-honest-work&quot;&gt;It Ain’t Much, But It’s Honest Work&lt;/h3&gt;&lt;p&gt;Learning more about IPFS by figuring out a possible use case was fun, but I spent quite some time in designing an application remotely useful: imagining solutions for the Distributed Web is still an uncharted territory, at least for me, but I believe it is an extremely rewarding path to follow.&lt;/p&gt;&lt;p&gt;If you are interested in Web3 and AgTech as well, please share your thoughts, I am keen on learning more on these subjects!&lt;/p&gt;&lt;h3 id=&quot;sources&quot;&gt;Sources&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Repository: &lt;a href=&quot;https://github.com/Ipanov7/spacebox&quot; rel=&quot;noopener ugc nofollow&quot;&gt;https://github.com/Ipanov7/spacebox&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Interplanetary telemetry compression: &lt;a href=&quot;http://blog.klaehn.org/2018/06/10/efficient-telemetry-storage-on-ipfs/&quot; rel=&quot;noopener ugc nofollow&quot;&gt;http://blog.klaehn.org/2018/06/10/efficient-telemetry-storage-on-ipfs/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Smart agriculture sensors: &lt;a href=&quot;https://www.mouser.it/applications/smart-agriculture-sensors/&quot; rel=&quot;noopener ugc nofollow&quot;&gt;https://www.mouser.it/applications/smart-agriculture-sensors/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Smart Contract Javafication: Web3j Wrappers and Other Sorceries</title>
    <link href="https://blog.lorisocchipinti.com/smart-contract-javafication-web3j-wrappers-and-other-sorceries/"/>
    <updated>2022-10-29T17:34:05.000+02:00</updated>
    <id>https://blog.lorisocchipinti.com/smart-contract-javafication-web3j-wrappers-and-other-sorceries/</id>
    <content type="html">&lt;p&gt;Recently I was dabbling with &lt;a href=&quot;https://consensys.net/quorum/developers/&quot; rel=&quot;noopener ugc nofollow&quot;&gt;Quorum&lt;/a&gt;, an open-source suite of tools, APIs, private key managers and clients to operate a private Ethereum network. My main goal was to figure out how to build applications on top of the Ethereum blockchain and how to correctly interact with Smart Contracts. I chose a Quorum version using Besu, an Ethereum client maintained by the Hyperledger Foundation that implements private transactions for enterprise use cases.&lt;/p&gt;&lt;p&gt;As a first step, we would need to prepare the tools of the trade. Of course, having a running blockchain is of the essence to even start working. The setup of a local Ethereum blockchain is very tricky IMHO, but we are in luck because &lt;a href=&quot;https://consensys.net/&quot; rel=&quot;noopener ugc nofollow&quot;&gt;ConsenSys&lt;/a&gt; curates a Quorum &lt;a href=&quot;https://consensys.net/quorum/products/guides/getting-started-with-consensys-quorum&quot; rel=&quot;noopener ugc nofollow&quot;&gt;quickstart project &lt;/a&gt;with everything needed to have a network running in minutes. The Consensys hands-on guide does a nice job of making the network deployment straightforward, so I won’t cover the details here.&lt;/p&gt;&lt;p&gt;However, if everything was done correctly, you will host a lively party of docker images on your machine:&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/10/besu-network-term.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;720&quot; height=&quot;355&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/10/besu-network-term.png 600w, https://blog.lorisocchipinti.com/content/images/2022/10/besu-network-term.png 720w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;Image from consensys.net&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;There is a lot to unpack here. Aside from the &lt;a href=&quot;https://www.elastic.co/what-is/elk-stack&quot; rel=&quot;noopener ugc nofollow&quot;&gt;ELK&lt;/a&gt; stack, the monitoring tools and the block explorer, we can find:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;4 Ethereum nodes running on QFTP. This is the minimum number required to have a Byzantine-fault resistant network&lt;/li&gt;&lt;li&gt;3 Besu clients, holding their respective members’ info&lt;/li&gt;&lt;li&gt;3 Tessera services, which are required to manage private transactions and their data&lt;/li&gt;&lt;li&gt;An RPC service node&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;javafying-a-smart-contract&quot;&gt;Javafying a Smart Contract&lt;/h3&gt;&lt;p&gt;The quorum-quickstart project features a smart contract called &lt;code&gt;SimpleStorage.sol&lt;/code&gt; and some interesting scripts that showcase web3js, a library to interact with smart contracts on Ethereum networks. However, being more of a Kotlin person, I’d rather want to experiment with &lt;em&gt;web3j&lt;/em&gt; (without the &quot;s&quot;), a Java-based library, and rewrite the same scripts to figure out what they actually do.&lt;/p&gt;&lt;p&gt;The first step is, obviously, to set up a project and then import the required dependencies:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// build.gradle (v6)
dependencies {
  implementation(&quot;org.web3j:core:4.8.7&quot;)
  implementation(&quot;org.web3j:besu:4.8.7&quot;)
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Let’s not forget about the plugin as well:&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;// build.gradle (v6)
plugins {
  id(&quot;org.web3j&quot;) version &quot;4.8.7&quot;
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The first step to take, after realizing that the &lt;code&gt;web3j&lt;/code&gt; plugin &lt;em&gt;at the moment&lt;/em&gt; does not support &lt;em&gt;gradle 7&lt;/em&gt;, is to transform the &lt;em&gt;SimpleStorage&lt;/em&gt; solidity file into a beautiful Java princess. Let’s take a look at it:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/52b00713ed068c4482afa625903aaa5f.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;The contract logic is straightforward even for those among us who are not well-versed in the Solidity witchcraft. &lt;code&gt;SimpleStorage.sol&lt;/code&gt; just stores a single unsigned integer on the blockchain, exposing some handy get/set methods for interacting with it. However, there is quite some work to do before we can afford to waltz in the company of this contract. Luckily, the web3j plugin can perform the work for us. All we need to do is to put it in a sensible location like the following&lt;/p&gt;&lt;pre&gt;&lt;code&gt;src
├── main
│   ├── kotlin
│   ├── solidity
│   │   └── SimpleStorage.sol⭐
│   └── resources
└── test&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and then run &lt;code&gt;gradle generateContractWrappers&lt;/code&gt;. The web3j plugin will build a Java wrapper called&lt;code&gt; SimpleStorage.java&lt;/code&gt; in the project’s &lt;code&gt;build&lt;/code&gt; directory so that we can easily handle the contract in our Kotlin code.&lt;/p&gt;&lt;h3 id=&quot;set-up-member-credentials&quot;&gt;Set up Member Credentials&lt;/h3&gt;&lt;p&gt;As we saw above, the Quorum Quickstart created three Besu memberships: for simplicity’s sake, we will call them ALICE, BOB and CHARLIE respectively. The private keys listed are generated by the Quorum quickstart example and stored in the &lt;code&gt;smart_contracts/keys.js&lt;/code&gt; file&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/981d4605165bd5256e08dfd661ee7eb2.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;The main elements are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;members’ node URLs: &lt;/strong&gt;these are the endpoints to reach the Besu clients and submit the requests&lt;/li&gt;&lt;li&gt;&lt;strong&gt;private keys: &lt;/strong&gt;members’ credentials to submit transactions, from which we can also derive their public key and address. It’s all hardcoded here for demonstrative purposes, it’s best to rely on a proper key management system for real uses cases&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Tessera public keys: &lt;/strong&gt;references to the Tessera’s enclave IDs, needed for managing private transaction data&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Now that we looked at the file contents we can, well, translate them to a more JVM-palatable language, like Kotlin:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/b39316fe9b42dd8775f147a1a88e2084.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Everything is finally ready to perform some blockchain trickery.&lt;/p&gt;&lt;h3 id=&quot;running-a-public-transaction&quot;&gt;Running a Public Transaction&lt;/h3&gt;&lt;p&gt;A basic starting point would be to deploy our &lt;code&gt;SimpleStorage&lt;/code&gt; smart contract and submit a transaction to it. But how can we? Honestly, the Javascript example looks a bit convoluted:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/100261f3ce2fdcfc7b0f1840f9b3c115.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;A lot is going on there, and it’s normal to feel a little dizzy at first. In a few words, the example builds a &lt;code&gt;RawTransaction&lt;/code&gt; from scratch by submitting the hex encoding of the smart contract, signs the transaction locally with &lt;code&gt;Alice&lt;/code&gt;’s private key and submits the transaction. Finally, the contract address is not immediately available, we still have to wait for the transaction to be confirmed to later invoke the contract methods. In short, it’s a drag.&lt;/p&gt;&lt;p&gt;However, it doesn’t have to be this way.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;val simpleStorage = SimpleStorage.deploy(
  clientAlice, ALICE, GAS_PRICE, GAS_LIMIT, BigInteger.ONE
).send()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… magic! We just deployed a smart contract on Ethereum with just a one-liner hocus pocus, all thanks to the web3j wrappers and niceties. We can invoke &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods in Kotlin idiomatically, as &lt;code&gt;simpleStorage&lt;/code&gt; is a regular object. Alice&#39;s credentials are embedded in the smart contract instance, so we can submit any transaction and web3j will take care of encoding, signing, sending to Besu and all that jazz. It goes without saying, it’s only fair that Bob and Charlie should have the chance to access to same public contract&lt;/p&gt;&lt;pre&gt;&lt;code&gt;val contractForBob = SimpleStorage.load(
  DEPLOYED_CONTRACT_ADDRESS, clientBob, BOB, GAS_PRICE, GAS_LIMIT
)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It’s possible to write a very basic dApp just by accessing the aforementioned set of APIs. Alice and Bob could interact on the same instance of the smart contract by accessing their independent ledger instances, possibly from opposite sides of the world:&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/a451708b124477c14039a4f24a8dc8cd.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;hr /&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/3b175d509e905b0bfa5ad901809226eb.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;h3 id=&quot;running-a-private-transaction-%F0%9F%A5%B7&quot;&gt;Running a Private Transaction 🥷&lt;/h3&gt;&lt;p&gt;Now that we all feel a bit godmotherly, we can even think of dipping our feet in private transactions. Please beware: when mentioning private transactions, I mean transactions where the data payload is available to a closed group of participants. This feature in Besu is orthogonal to the target network: it is possible to run private transactions either in the Ethereum mainnet or in a permissioned network.&lt;/p&gt;&lt;p&gt;The enabling technology for the privacy layer is called Tessera: it is a decentralized storage for private transaction data, where each participant is identified by an Enclave key and has access to a reserved Tessera node. A collective of multiple enclaves is called a Privacy Group, an entity that holds a private state collected during private transactions. Of course, any node willing to work with private data must have its Tessera Node. The Quorum quickstart example will set up Enclaves out of the box: just remember to &lt;a href=&quot;https://besu.hyperledger.org/en/stable/HowTo/Use-Privacy/Use-FlexiblePrivacy/#enabling-flexible-privacy-groups&quot; rel=&quot;noopener ugc nofollow&quot;&gt;enable privacy groups by configuring environment variables&lt;/a&gt;.&lt;/p&gt;&lt;figure class=&quot;kg-card kg-image-card kg-card-hascaption&quot;&gt;&lt;img src=&quot;https://blog.lorisocchipinti.com/content/images/2022/10/tessera.png&quot; class=&quot;kg-image&quot; alt=&quot;&quot; loading=&quot;lazy&quot; width=&quot;731&quot; height=&quot;636&quot; srcset=&quot;https://blog.lorisocchipinti.com/content/images/size/w600/2022/10/tessera.png 600w, https://blog.lorisocchipinti.com/content/images/2022/10/tessera.png 731w&quot; sizes=&quot;(min-width: 720px) 720px&quot; /&gt;&lt;figcaption&gt;&lt;a href=&quot;https://besu.hyperledger.org/en/stable/Concepts/Privacy/Privacy-Overview/&quot; rel=&quot;noopener ugc nofollow&quot;&gt;https://besu.hyperledger.org/en/stable/Concepts/Privacy/Privacy-Overview/&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Running private transactions is a bit more involved than submitting public ones, but web3j still makes a good job of spoiling us. The main caveat is that we now need a &lt;code&gt;private transaction processor&lt;/code&gt; to check whether the private transactions are being mined or not, and a &lt;code&gt;private transaction manager&lt;/code&gt; instead of plain credentials. But let’s go in order.&lt;/p&gt;&lt;p&gt;We will create a privacy group for Alice and Charlie and wait until it is confirmed onchain&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/032d40213f38ee091cc3730b6bf57632.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Deploying smart contracts and interacting with them is almost as straightforward as it was with public transactions. All we need is the&lt;em&gt; Privacy Group ID&lt;/em&gt; and a special &lt;code&gt;transaction manager&lt;/code&gt; that is easily built from information already available&lt;/p&gt;&lt;!--kg-card-begin: html--&gt;&lt;script src=&quot;https://gist.github.com/Ipanov7/dbd066f99c4cc6f9f2aba246b1e35782.js&quot;&gt;&lt;/script&gt;&lt;!--kg-card-end: html--&gt;&lt;p&gt;Finally, all we need to do is deploy a Smart Contract privately&lt;/p&gt;&lt;pre&gt;&lt;code&gt;val privateSimpleStorage = SimpleStorage.deploy(
  clientAlice, tm, GAS_PRICE, GAS_LIMIT, BigInteger.ONE
).send()&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Our private smart contract wrapper will now expose the &lt;code&gt;set&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt; methods of the Solidity implementation but, unsurprisingly, data will only be available within the privacy group.&lt;/p&gt;&lt;h3 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h3&gt;&lt;p&gt;JVM-based languages are not first to mind when discussing web3 applications but, honestly, they are pretty ubiquitous and there is a nice ecosystem in place for them already. It’s only up to us to decide what to build.&lt;/p&gt;&lt;p&gt;&lt;em&gt;If you had a good time and would like to read more articles with questionable Disney comparisons, follow me on Medium and let me know what is your opinion.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Well, let’s go now: our &lt;em&gt;Kotlinderellas&lt;/em&gt; are waiting for us!&lt;/p&gt;&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Web3j website: &lt;a href=&quot;https://docs.web3j.io/4.8.7/&quot; rel=&quot;noopener ugc nofollow&quot;&gt;https://docs.web3j.io/4.8.7/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Besu docs and API: &lt;a href=&quot;https://besu.hyperledger.org/en/stable/&quot; rel=&quot;noopener ugc nofollow&quot;&gt;https://besu.hyperledger.org/en/stable/&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Quorum quickstart: &lt;a href=&quot;https://consensys.net/quorum/products/guides/getting-started-with-consensys-quorum/&quot; rel=&quot;noopener ugc nofollow&quot;&gt;https://consensys.net/quorum/products/guides/getting-started-with-consensys-quorum/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content>
  </entry>
</feed>
